{{- if .Capabilities.APIVersions.Has "apiextensions.k8s.io/v1" }}
apiVersion: apiextensions.k8s.io/v1
{{- else }}
apiVersion: apiextensions.k8s.io/v1beta1
{{- end }}
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: externalcertificates.com.ericsson.sec.certm
  labels:
{{- include "eric-sec-certm-crd.labels" . | indent 4 }}
  annotations:
{{- include "eric-sec-certm-crd.annotations" . | indent 4 }}
    "helm.sh/resource-policy": keep
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: com.ericsson.sec.certm
  # List of versions supported by this CustomResourceDefinition
  # Each version can be enabled/disabled by Served flag.
  # One and only one version must be marked as the storage version.
  versions:
    - name: v1alpha1
{{- if (semverCompare ">=1.19-0" (include "eric-sec-certm-crd.KubernetesVersion" .)) }}
      # This indicates that the v1alpha1 version of the custom resource is deprecated.
      # API requests to this version receive a warning header in the server response.
      deprecated: true
      # This overrides the default warning returned to API clients making v1alpha1 API requests.
      deprecationWarning: "com.ericsson.sec.certm/v1alpha1 will be removed from 25-05-2022; see the Certificate Management API Documentation (1/155 19-CAF 101 94/1 Uen) for instructions to migrate to the new apiVersion certm.sec.ericsson.com/v1"
{{- end }}
      served: true
      storage: false
{{- if .Capabilities.APIVersions.Has "apiextensions.k8s.io/v1" }}
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
              - generated-secret-name
              - generated-secret-type
              properties:
                generated-secret-name:
                  type: string
                  description: Name of secret to be created and used when provisioning certificates and keys
                  pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
                generated-secret-type:
                  type: string
                  description: The type of secret to be created. The tls type is required for Ingress Controllers. Note that the tls type secret contains one private key and one certificate which means it's only applicable for asymmetric-key-certificate consumers.
                  enum:
                  - tls
                  - opaque
                trusted-certificates-file-name:
                  type: string
                  description: Name of file to contain all trusted certificates. When set, all trusted certificates are stored in one PEM file with specified name. This overrides the default behavior where each trusted certificate is stored in its own PEM file. Only applicable for trusted certificates, that is, when either trusted-certificate-list-name or local-or-truststore-certs-grouping is used.
                consumer-model-ref:
                  type: object
                  description: A model reference to certificate or key. Use when certificates and keys are referenced from a Yang consumer model. For usage example, see Certificate Management Interface Description 1/15519-CAF 101 94/1.
                  properties:
                    yang-module:
                      type: string
                      description: The Yang module name containing the reference
                    grouping:
                      type: string
                      description: The grouping used when referencing certificates and keys. One of the below groupings as defined by ietf-keystore and ietf-truststore models must be used.
                      enum:
                      - local-or-keystore-asymmetric-key-grouping
                      - local-or-keystore-end-entity-cert-with-key-grouping
                      - local-or-truststore-certs-grouping
                      - local-or-truststore-host-keys-grouping
                    schema-node-identifier:
                      type: string
                      description: The schema node identifier to the node where the grouping is used. Use absolute path from root node containing the grouping including initial solidus (forward slash).
                  required:
                  - yang-module
                  - grouping
                  - schema-node-identifier
                asymmetric-key-name:
                  type: string
                  description: Name of the asymmetric-key instance according to ietf-keystore configuration. Use when asymmetric-key is referenced by name.
                asymmetric-key-certificate-name:
                  type: string
                  description: Name of the asymmetric-key-certificate instance according to ietf-keystore configuration. The name must be prefixed with the parent asymmetric-key name and forward slash as separator, for example "netconf-key/netconf-certificate". Use when asymmetric-key-certificate is referenced by name.
                trusted-certificate-list-name:
                  type: string
                  description: Name of the trusted certificates list instance according to ietf-truststore configuration. Use when trusted certificates list is referenced by name.
                trusted-host-key-list-name:
                  type: string
                  description: Name of the trusted host-keys list instance according to ietf-truststore configuration. Use when host-keys list is referenced by name.
{{- end }}
    - name: v1alpha2
{{- if (semverCompare ">=1.19-0" (include "eric-sec-certm-crd.KubernetesVersion" .)) }}
      # This indicates that the v1alpha2 version of the custom resource is deprecated.
      # API requests to this version receive a warning header in the server response.
      deprecated: true
      # This overrides the default warning returned to API clients making v1alpha1 API requests.
      deprecationWarning: "com.ericsson.sec.certm/v1alpha2 will be removed from 25-05-2022; see the Certificate Management API Documentation (1/155 19-CAF 101 94/1 Uen) for instructions to migrate to the new apiVersion certm.sec.ericsson.com/v1"
{{- end }}
      served: true
      storage: true
{{- if .Capabilities.APIVersions.Has "apiextensions.k8s.io/v1" }}
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
              - generated-secret-name
              - generated-secret-type
              properties:
                generated-secret-name:
                  type: string
                  description: Name of secret to be created and used when provisioning certificates and keys
                  pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
                generated-secret-type:
                  type: string
                  description: The type of secret to be created. The tls type is required for Ingress Controllers. Note that the tls type secret contains one private key and one certificate which means it's only applicable for asymmetric-key-certificate consumers.
                  enum:
                  - tls
                  - opaque
                trusted-certificates-file-name:
                  type: string
                  description: Name of file to contain all trusted certificates. When set, all trusted certificates are stored in one PEM file with specified name. This overrides the default behavior where each trusted certificate is stored in its own PEM file. Only applicable for trusted certificates, that is, when either trusted-certificate-list-name or local-or-truststore-certs-grouping is used.
                consumer-model-ref:
                  type: object
                  description: A model reference to certificate or key. Use when certificates and keys are referenced from a Yang consumer model. For usage example, see Certificate Management Interface Description 1/15519-CAF 101 94/1.
                  properties:
                    yang-module:
                      type: string
                      description: The Yang module name containing the reference
                    grouping:
                      type: string
                      description: The grouping used when referencing certificates and keys. One of the below groupings as defined by ietf-keystore and ietf-truststore models must be used.
                      enum:
                      - local-or-keystore-asymmetric-key-grouping
                      - local-or-keystore-end-entity-cert-with-key-grouping
                      - local-or-truststore-certs-grouping
                      - local-or-truststore-host-keys-grouping
                    schema-node-identifier:
                      type: string
                      description: The schema node identifier to the node where the grouping is used. Use absolute path from root node containing the grouping including initial solidus (forward slash).
                  required:
                  - yang-module
                  - grouping
                  - schema-node-identifier
                asymmetric-key-name:
                  type: string
                  description: Name of the asymmetric-key instance according to ietf-keystore configuration. Use when asymmetric-key is referenced by name.
                asymmetric-key-certificate-name:
                  type: string
                  description: Name of the asymmetric-key-certificate instance according to ietf-keystore configuration. The name must be prefixed with the parent asymmetric-key name and forward slash as separator, for example "netconf-key/netconf-certificate". Use when asymmetric-key-certificate is referenced by name.
                trusted-certificate-list-name:
                  type: string
                  description: Name of the trusted certificates list instance according to ietf-truststore configuration. Use when trusted certificates list is referenced by name.
                trusted-host-key-list-name:
                  type: string
                  description: Name of the trusted host-keys list instance according to ietf-truststore configuration. Use when host-keys list is referenced by name.
{{- end }}
  # Either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: externalcertificates
    # singular name to be used as an alias on the CLI and for display
    singular: externalcertificate
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: ExternalCertificate
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
    - extcert
    - extcerts
    - externalcert
    - externalcerts
{{- if (not (.Capabilities.APIVersions.Has "apiextensions.k8s.io/v1")) }}
  validation:
    # openAPIV3Schema is the schema for validating custom objects.
    openAPIV3Schema:
      type: object
      properties:
        spec:
          type: object
          required:
          - generated-secret-name
          - generated-secret-type
          properties:
            generated-secret-name:
              type: string
              description: Name of secret to be created and used when provisioning certificates and keys
              pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
            generated-secret-type:
              type: string
              description: The type of secret to be created. The tls type is required for Ingress Controllers. Note that the tls type secret contains one private key and one certificate which means it's only applicable for asymmetric-key-certificate consumers.
              enum:
              - tls
              - opaque
            trusted-certificates-file-name:
              type: string
              description: Name of file to contain all trusted certificates. When set, all trusted certificates are stored in one PEM file with specified name. This overrides the default behavior where each trusted certificate is stored in its own PEM file. Only applicable for trusted certificates, that is, when either trusted-certificate-list-name or local-or-truststore-certs-grouping is used.
            consumer-model-ref:
              type: object
              description: A model reference to certificate or key. Use when certificates and keys are referenced from a Yang consumer model. For usage example, see Certificate Management Interface Description 1/15519-CAF 101 94/1.
              properties:
                yang-module:
                  type: string
                  description: The Yang module name containing the reference
                grouping:
                  type: string
                  description: The grouping used when referencing certificates and keys. One of the below groupings as defined by ietf-keystore and ietf-truststore models must be used.
                  enum:
                  - local-or-keystore-asymmetric-key-grouping
                  - local-or-keystore-end-entity-cert-with-key-grouping
                  - local-or-truststore-certs-grouping
                  - local-or-truststore-host-keys-grouping
                schema-node-identifier:
                  type: string
                  description: The schema node identifier to the node where the grouping is used. Use absolute path from root node containing the grouping including initial solidus (forward slash).
              required:
              - yang-module
              - grouping
              - schema-node-identifier
            asymmetric-key-name:
              type: string
              description: Name of the asymmetric-key instance according to ietf-keystore configuration. Use when asymmetric-key is referenced by name.
            asymmetric-key-certificate-name:
              type: string
              description: Name of the asymmetric-key-certificate instance according to ietf-keystore configuration. The name must be prefixed with the parent asymmetric-key name and forward slash as separator, for example "netconf-key/netconf-certificate". Use when asymmetric-key-certificate is referenced by name.
            trusted-certificate-list-name:
              type: string
              description: Name of the trusted certificates list instance according to ietf-truststore configuration. Use when trusted certificates list is referenced by name.
            trusted-host-key-list-name:
              type: string
              description: Name of the trusted host-keys list instance according to ietf-truststore configuration. Use when host-keys list is referenced by name.
{{- end }}