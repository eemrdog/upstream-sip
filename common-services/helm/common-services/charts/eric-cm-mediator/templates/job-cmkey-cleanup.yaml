{{ if (.Values.cmkey.enable) }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "eric-cm-mediator.name" . }}-key-init
  labels: {{ include "eric-cm-mediator.labels" . | nindent 4 }}
  annotations: {{ include "eric-cm-mediator.annotations" . | nindent 4 }}
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback,pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
spec:
  template:
    metadata:
      name: {{ template "eric-cm-mediator.name" . }}-key-init
      labels: {{ include "eric-cm-mediator.labels" . | nindent 8 }}
      annotations: {{ include "eric-cm-mediator.annotations" . | nindent 8 }}
    spec:
      serviceAccountName: {{ template "eric-cm-mediator.name" . }}-hook
      automountServiceAccountToken: false
      {{- if include "eric-cm-mediator.pullSecret" . }}
      imagePullSecrets:
      - name: {{ template "eric-cm-mediator.pullSecret" . }}
      {{- end }}
      restartPolicy: Never
      {{- if include "eric-cm-mediator.nodeSelector" . }}
      nodeSelector:
        {{ template "eric-cm-mediator.nodeSelector" . }}
      {{- end }}
{{- if (index .Values "tolerations" "eric-cm-key-init") }}
      tolerations:
{{ toYaml (index .Values "tolerations" "eric-cm-key-init") | indent 6 }}
{{- end }}
      containers:
      - name: eric-cm-key-init
        image: {{ template "eric-cm-mediator.imagePath" (dict "root" .Values "image" "eric-cm-key-init" "files" .Files) }}
        imagePullPolicy: {{ template "eric-cm-mediator.pullPolicy" . }}
        securityContext: {{ include "eric-cm-mediator.containerSecurityContext" . | nindent 10 }}
{{ if index .Values "resources" "eric-cm-key-init" }}
        resources:
{{ toYaml (index .Values "resources" "eric-cm-key-init") | indent 10 }}
{{ end }}
        command: ["/bin/sh","-c"]
        args: ["echo 'Cleanup hook'"]
{{ end }}
