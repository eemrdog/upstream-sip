{{/*
Filebeat ConfigMap configuration
*/}}
{{- $default := fromJson (include "eric-data-search-engine-curator.logshipper-default-value" .) -}}
{{- $g := fromJson (include "eric-data-search-engine-curator.logshipper-global" .) -}}
apiVersion: "v1"
kind: "ConfigMap"
metadata:
  name: "{{ include "eric-data-search-engine-curator.logshipper-service-fullname" . }}-logshipper-cfg"
  annotations:
    {{- include "eric-data-search-engine-curator.annotations" . | indent 4 }}
  labels:
    {{- include "eric-data-search-engine-curator.logshipper-labels" . | indent 4 }}
data:
  {{- $closeTimeout := $default.logshipper.harvester.closeTimeout | quote }}
  {{- $storagePath := $default.logshipper.storagePath }}
  {{- $serviceId := include "eric-data-search-engine-curator.logshipper-service-fullname" . | quote }}
  filebeat.yml: |
    filebeat.inputs:
    - type: log
      paths:
        {{- if eq (len $default.logshipper.harvester.logData) 0 }}
        - {{ $storagePath }}/**/*
        {{- else }}
        - {{ $storagePath }}/init.log*
        - {{ $storagePath }}/filebeat.log*
        {{- end }}
      fields:
        logplane: {{ $default.logshipper.logplane }}
        kubernetes:
          pod:
            uid: ${POD_UID}
            name: ${POD_NAME}
          node:
            name: ${NODE_NAME}
          namespace: ${NAMESPACE}
          labels:
            app:
              kubernetes:
                io/name: {{ $serviceId }}
      close_timeout: {{ $closeTimeout }}
      fields_under_root: true
      exclude_files:
        - '\.pid$'
        - '^{{ $storagePath }}/data/'
      multiline:
        pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T"
        negate: true
        match: after
    {{- range $key, $value := $default.logshipper.harvester.logData }}
    - type: log
      paths:
        {{- range $value.subPaths }}
        - {{ $storagePath }}/{{ . }}
        {{- end }}
      fields:
        logplane: {{ $value.logplane | default $default.logshipper.logplane }}
        {{- if hasKey $value "additionalFields" }}
        extra_data:
        {{- range $key, $value := $value.additionalFields }}
          {{ $key }}: {{ . | quote }}
        {{- end }}
        {{- end }}
        kubernetes:
          pod:
            uid: ${POD_UID}
            name: ${POD_NAME}
          node:
            name: ${NODE_NAME}
          namespace: ${NAMESPACE}
          labels:
            app:
              kubernetes:
                io/name: {{ $serviceId }}
      close_timeout: {{ $closeTimeout }}
      fields_under_root: true
      exclude_files:
        - '\.pid$'
        - '^{{ $storagePath }}/data/'
      {{- if $value.multiline }}
      multiline:
        pattern: {{ $value.multiline.pattern | quote }}
        negate: {{ $value.multiline.negate }}
        match: {{ $value.multiline.match }}
      {{- end }}
    {{- end }}
    processors:
      - decode_json_fields:
          fields:
            - "message"
          target: "json"
          overwrite_keys: true
      - rename:
          fields:
            - from: "log.file.path"
              to: "filename"
      - drop_fields:
          fields:
            - "input"
            - "log"
            - "host"
            - "agent"
            - "ecs"
    output.logstash:
    {{- if $g.security.tls.enabled }}
      hosts: "{{ $default.logshipper.logtransformer.host }}:5044"
    {{- else }}
      hosts: "{{ $default.logshipper.logtransformer.host }}:5045"
    {{- end }}
      bulk_max_size: 2048
      worker: 1
      pipelining: 0
      ttl: 30
      {{- if $g.security.tls.enabled }}
      ssl.certificate_authorities: "/run/secrets/ca-certificates/cacertbundle.pem"
      ssl.certificate: "/run/secrets/certificates/clicert.pem"
      ssl.key: "/run/secrets/certificates/cliprivkey.pem"
      ssl.verification_mode: "full"
      ssl.renegotiation: "freely"
      ssl.supported_protocols: ["TLSv1.2"]
      ssl.cipher_suites: []
      {{- end }}
    filebeat.registry.flush: 5s
    logging.level: {{ $default.log.logshipper.level | quote | lower }}
    logging.metrics.enabled: false
    logging.to_files: true
    logging.files:
      path: {{ $storagePath }}
      name: filebeat.log
      keepfiles: 10
      permissions: 0600
      rotateeverybytes: 1000000
