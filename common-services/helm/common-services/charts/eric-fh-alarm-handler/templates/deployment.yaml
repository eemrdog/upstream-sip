{{- $tls := (include "eric-fh-alarm-handler.tls.enabled" .) -}}
{{- $probesTLSOnly :=  (include "eric-fh-alarm-handler.probes.server.tlsOnly" .) -}}
{{- $metricsEnabled := ( .Values.service.endpoints.metrics.enabled | quote) -}}
{{- $metricsTLSOnly := (include "eric-fh-alarm-handler.metrics.server.tlsOnly" .) -}}
{{- $logRedirect := (include "eric-fh-alarm-handler.logRedirect" .) -}}
{{- $logshipperEnabled := (has "stream" .Values.log.outputs) }}
{{- $redisWriterEnabled := (include "eric-fh-alarm-handler.redisAsiWriterEnabled" .) -}}
{{- $redisACLEnabled := (.Values.redis.acl.enabled | toString | lower) -}}
{{- $kafkaEnabled := (include "eric-fh-alarm-handler.kafkaEnabled" .) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "eric-fh-alarm-handler.name" . }}
  annotations:
{{- include "eric-fh-alarm-handler.annotations" . | indent 4 }}
  labels:
{{- include "eric-fh-alarm-handler.labels" . | indent 4 }}
spec:
  strategy:
    type: {{ .Values.updateStrategy.type | quote }}
{{- if eq .Values.updateStrategy.type "RollingUpdate" }}
{{- if or .Values.updateStrategy.rollingUpdate.maxUnavailable .Values.updateStrategy.rollingUpdate.maxSurge }}
    rollingUpdate:
{{- end }}
{{- if .Values.updateStrategy.rollingUpdate.maxUnavailable }}
      maxUnavailable: {{ .Values.updateStrategy.rollingUpdate.maxUnavailable | quote }}
{{- end }}
{{- if .Values.updateStrategy.rollingUpdate.maxSurge }}
      maxSurge: {{ .Values.updateStrategy.rollingUpdate.maxSurge | quote }}
{{- end }}
{{- end }}
  replicas: {{ .Values.replicaCount }}
{{- if .Values.podPriority.priorityClassName }}
  priorityClassName: {{ .Values.podPriority.priorityClassName | quote }}
{{- end }}
  selector:
    matchLabels:
      app: {{ template "eric-fh-alarm-handler.name" . }}
  template:
    metadata:
      labels:
{{- include "eric-fh-alarm-handler.labels" . | indent 8 }}
      annotations:
{{- include "eric-fh-alarm-handler.annotations" . | indent 8 }}
{{- if and .Values.authorizationProxy.enabled .Values.ingress.enabled }}
{{- printf "\n" -}}
{{- include "eric-fh-alarm-handler.authz-proxy-metrics-annotations" . | indent 8 }}
{{- end }}
    spec:
      serviceAccountName: {{ template "eric-fh-alarm-handler.name" . }}-service-account
      restartPolicy: Always
{{- if (not (empty (include "eric-fh-alarm-handler.pullSecrets" .))) }}
      imagePullSecrets:
      - name: {{ template "eric-fh-alarm-handler.pullSecrets" . }}
{{- end }}
      initContainers:
      {{- include "eric-fh-alarm-handler.authz-proxy-sap-container.spec" . | nindent 6 }}
      - name: topic-creator
        image: {{ template "eric-fh-alarm-handler.initImagePath" . }}
        imagePullPolicy: {{ template "eric-fh-alarm-handler.initImagePullPolicy" . }}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
              - all
        env:
{{- if $logshipperEnabled }}
        - name: LOG_OUTPUTS_BOTH
          value: {{ include "eric-fh-alarm-handler.logOutputsBoth" . | quote }}
{{- end }}
        - name: TZ
          value: {{ template "eric-fh-alarm-handler.timezone" . }}
        - name: MEMORY_STORAGE_ROOT_FOLDER
          value: {{ template "eric-fh-alarm-handler.memoryStorage.mountFolderTopicCreator" . }}
{{- if eq $tls "true" }}
        - name: AH_SERVER_USE_TLS
          value: "true"
{{- end }}
{{- if not (eq $tls "true") }}
        - name: AH_BACKEND_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.credentials.kubernetesSecretName | quote }}
              key: {{ .Values.credentials.keyForUserId | quote }}
        - name: AH_BACKEND_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.credentials.kubernetesSecretName | quote }}
              key: {{ .Values.credentials.keyForUserPw | quote }}
        - name: AH_BACKEND_SUPERUSER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.credentials.kubernetesSecretName | quote }}
              key: {{ .Values.credentials.keyForSuperPw | quote }}
{{- else }}
        - name: AH_BACKEND_USERNAME
          value: {{ .Values.backend.dbuser | quote }}
{{- end }}
        - name: AH_BACKEND_SERVER
{{- if not (eq $tls "true") }}
          value: {{ .Values.backend.type }} dbname={{ .Values.backend.dbname }} user=$(AH_BACKEND_USERNAME) password=$(AH_BACKEND_PASSWORD) host={{ .Values.backend.hostname }} port={{ .Values.backend.port }}
{{- else }}
          value: {{ .Values.backend.type }} dbname={{ .Values.backend.dbname }} user=$(AH_BACKEND_USERNAME) host={{ .Values.backend.hostname }} port={{ .Values.backend.port }}
{{- end }}
        - name: AH_SERVER_LOG_LEVEL
          value: {{ .Values.alarmhandler.logLevel | quote }}
        - name: KAFKA_ENABLED
          value: {{ $kafkaEnabled | quote }}
        - name: AH_ASI_TOPIC
          value: AdpAlarmStateIndication
        - name: AH_ASI_TOPIC_partitions
          value: {{ .Values.alarmhandler.asi.topic.partitions | quote }}
        - name: AH_ASI_TOPIC_replicationFactor
          value: {{ .Values.alarmhandler.asi.topic.replicationFactor | quote }}
        - name: AH_ASI_TOPIC_configCLIParams
          value: {{ .Values.alarmhandler.asi.topic.configCLIParams | quote }}
        - name: AH_FI_TOPIC
          value: AdpFaultIndication
        - name: AH_FI_TOPIC_partitions
          value: {{ .Values.alarmhandler.fi.topic.partitions | quote }}
        - name: AH_FI_TOPIC_replicationFactor
          value: {{ .Values.alarmhandler.fi.topic.replicationFactor | quote }}
        - name: AH_FI_TOPIC_configCLIParams
          value: {{ .Values.alarmhandler.fi.topic.configCLIParams | quote }}
        - name: KAFKA_HOST
          value: {{ .Values.kafka.hostname | quote }}
        - name: KAFKA_PORT
{{- if eq $tls "true" }}
          value: {{ .Values.kafka.tlsport | quote }}
{{- end }}
{{- if not (eq $tls "true") }}
          value: {{ .Values.kafka.port | quote }}
{{- end }}
        - name: KAFKA_CONNECT_TIMEOUT
          value: {{ .Values.kafka.connectTimeout | quote }}
{{- if .Values.alarmhandler.fi.consumerConfig }}
        - name: AH_CONSUMER_CONFIG
          value: {{ .Values.alarmhandler.fi.consumerConfig | quote }}
{{- end }}
{{- if .Values.alarmhandler.asi.producerConfig }}
        - name: AH_PRODUCER_CONFIG
          value: {{ .Values.alarmhandler.asi.producerConfig | quote }}
{{- end }}
        - name: TLS_ENABLED
          value: {{ $tls | quote }}
        volumeMounts:
{{- if eq $tls "true" }}
          - name: tls-trusted-ca-cert-volumemount
            mountPath: {{ template "eric-fh-alarm-handler.siptls.root.cert.mountFolderInit" . }}
            readOnly: true
{{- if (eq $kafkaEnabled "true") }}
          - name: tls-kafka-client-volumemount
            mountPath: {{ template "eric-fh-alarm-handler.kafka.client.cert.mountFolderInit" . }}
            readOnly: true
{{- end }}
          - name: tls-document-db-client-cert-volumemount
            mountPath: {{ template "eric-fh-alarm-handler.pg.client.cert.mountFolder" . }}
            readOnly: true

          - name: tls-document-db-admin-cert-volumemount
            mountPath: {{ template "eric-fh-alarm-handler.pg.admin.cert.mountFolder" . }}
            readOnly: true

          - name: memory-storage-topic-creator
            mountPath: {{ template "eric-fh-alarm-handler.memoryStorage.mountFolderTopicCreator" . }}
            readOnly: false
{{- end }}
{{- if $logshipperEnabled }}
{{- include "eric-fh-alarm-handler.logshipper-storage-path" . | indent 10 }}
        command: ["sh"]
        args: ["-c", "./init.sh {{ $logRedirect }}"]
{{- else }}
        command: ["sh"]
        args: ["-c", "./run.sh"]
{{- end }}
        resources:
{{ include "eric-fh-alarm-handler.resources.topiccreator" . | indent 10 }}
      containers:
      - name: eric-fh-alarm-handler
        env:
{{- if $logshipperEnabled }}
        - name: LOG_OUTPUTS_BOTH
          value: {{ include "eric-fh-alarm-handler.logOutputsBoth" . | quote }}
{{- end }}
{{- if not (eq $tls "true") }}
        - name: AH_BACKEND_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.credentials.kubernetesSecretName | quote }}
              key: {{ .Values.credentials.keyForUserId | quote }}
        - name: AH_BACKEND_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.credentials.kubernetesSecretName | quote }}
              key: {{ .Values.credentials.keyForUserPw | quote }}
{{- else }}
        - name: AH_BACKEND_USERNAME
          value: {{ .Values.backend.dbuser | quote }}
{{- end }}
{{- if and (eq $redisWriterEnabled "true") (eq $redisACLEnabled "true") }}
        - name: REDIS_ACL_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ include "eric-fh-alarm-handler.redis.acl.secretname" . | quote }}
              key: {{ .Values.redis.acl.userKey | quote }}
        - name: REDIS_ACL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "eric-fh-alarm-handler.redis.acl.secretname" . | quote }}
              key: {{ .Values.redis.acl.passKey | quote }}
{{- end }}
        image: {{ template "eric-fh-alarm-handler.imagePath" . }}
        securityContext:
          allowPrivilegeEscalation: false # Don't allow process to gain more privileges than its parent process.
          privileged: false               # The container should run in non-privileged mode.
          readOnlyRootFilesystem: true    # Read only access to container files (root file system, not mounted files).
          runAsNonRoot: true              # Validates that the container is started with non-root user. The user must be *numeric*.
          capabilities:                   # Drop all capabilities.
            drop:
              - all
        resources:
{{ include "eric-fh-alarm-handler.resources.alarmhandler.merged" . | indent 10 }}
        imagePullPolicy: {{ include "eric-fh-alarm-handler.ImagePullPolicy" . }}
        ports:
{{- if or (not (eq $tls "true")) (eq .Values.service.endpoints.restapi.tls.enforced "optional") }}
        - containerPort: {{ include "eric-fh-alarm-handler.restapi.server.port" . }}
          name: http-rest-api
{{- end }}
{{- if eq $tls "true" }}
        - containerPort: {{ include "eric-fh-alarm-handler.restapi.server.tls.port" . }}
          name: https-rest-api
{{- end }}
{{- if eq (include "eric-fh-alarm-handler.fiAPI.httpEnabled" .) "true" }}
        - containerPort: {{ include "eric-fh-alarm-handler.rest.fi.server.httpPort" . }}
          name: http-fi-api
{{- end }}
{{- if eq (include "eric-fh-alarm-handler.fiAPI.httpsEnabled" .) "true" }}
        - containerPort: {{ include "eric-fh-alarm-handler.rest.fi.server.httpsPort" . }}
          name: https-fi-api
{{- end }}
        envFrom:
          - configMapRef:
              name: {{ template "eric-fh-alarm-handler.name" . }}
        terminationMessagePolicy: "FallbackToLogsOnError"
        livenessProbe:
          httpGet:
            path: /health
            port: {{ template "eric-fh-alarm-handler.probes.port" . }}
            scheme: {{ template "eric-fh-alarm-handler.probes.scheme" . }}
{{- if (semverCompare "<1.20-0" (printf "%s.%s" .Capabilities.KubeVersion.Major (trimSuffix "+" .Capabilities.KubeVersion.Minor))) }}
          initialDelaySeconds: {{ .Values.probes.alarmHandler.livenessProbe.initialDelaySeconds }}
{{- end }}
          periodSeconds: {{ .Values.probes.alarmHandler.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.probes.alarmHandler.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.probes.alarmHandler.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.probes.alarmHandler.livenessProbe.failureThreshold }}
        readinessProbe:
          httpGet:
            path: /ready
            port: {{ template "eric-fh-alarm-handler.probes.port" . }}
            scheme: {{ template "eric-fh-alarm-handler.probes.scheme" . }}
{{- if (semverCompare "<1.20-0" (printf "%s.%s" .Capabilities.KubeVersion.Major (trimSuffix "+" .Capabilities.KubeVersion.Minor))) }}
          initialDelaySeconds: {{ .Values.probes.alarmHandler.readinessProbe.initialDelaySeconds }}
{{- end }}
          periodSeconds: {{ .Values.probes.alarmHandler.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.probes.alarmHandler.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.probes.alarmHandler.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.probes.alarmHandler.readinessProbe.failureThreshold }}
{{- if (semverCompare ">=1.20-0" (printf "%s.%s" .Capabilities.KubeVersion.Major (trimSuffix "+" .Capabilities.KubeVersion.Minor))) }}
        startupProbe:
          httpGet:
            path: /health
            port: {{ template "eric-fh-alarm-handler.probes.port" . }}
            scheme: {{ template "eric-fh-alarm-handler.probes.scheme" . }}
          initialDelaySeconds: {{ .Values.probes.alarmHandler.startupProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.alarmHandler.startupProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.probes.alarmHandler.startupProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.probes.alarmHandler.startupProbe.failureThreshold }}
{{- end }}
        volumeMounts:
          - name: log-level-config
            mountPath: {{ template "eric-fh-alarm-handler.loglevel.mountFolder" . }}
            readOnly: true
{{- if eq $metricsEnabled "true" }}
{{- if and (eq $tls "true") (eq $metricsTLSOnly "true") }}
          - name: "metrics-server-cert"
            readOnly: true
            mountPath: {{ template "eric-fh-alarm-handler.metrics.server.cert.mountFolder" . }}
          - name: "metrics-client-cacert"
            readOnly: true
            mountPath: {{ template "eric-fh-alarm-handler.metrics.client.cacert.mountFolder" . }}
{{- end }}
{{- end }}
{{- if and (eq $tls "true") (eq $probesTLSOnly "true") }}
          - name: "probes-server-cert"
            readOnly: true
            mountPath: {{ template "eric-fh-alarm-handler.probes.server.cert.mountFolder" . }}
{{- end }}
{{- if eq $tls "true" }}
          - name: tls-server-cert-volumemount
            mountPath: {{ template "eric-fh-alarm-handler.restapi.server.cert.mountFolder" . }}
            readOnly: true

{{- if eq (include "eric-fh-alarm-handler.fiAPI.httpsEnabled" .) "true" }}
          - name: fi-server-client-ca-cert-volumemount
            mountPath: {{ template "eric-fh-alarm-handler.fiAPI.client.ca.cert.mountFolder" . }}
            readOnly: true

          - name: fi-server-cert-volumemount
            mountPath: {{ template "eric-fh-alarm-handler.fiAPI.server.cert.mountFolder" . }}
            readOnly: true

          - name: fi-client-cert-volumemount
            mountPath: {{ template "eric-fh-alarm-handler.fiAPI.client.cert.mountFolder" . }}
            readOnly: true
{{- end }}

          - name: tls-trusted-ca-cert-volumemount
            mountPath: {{ template "eric-fh-alarm-handler.siptls.root.cert.mountFolder" . }}
            readOnly: true

          - name: tls-client-ca-cert-volumemount
            mountPath: {{ template "eric-fh-alarm-handler.client.ca.cert.mountFolder" . }}
            readOnly: true

          - name: tls-client-cert-volumemount
            mountPath: {{ template "eric-fh-alarm-handler.client.cert.mountFolder" . }}
            readOnly: true
{{- if (eq $kafkaEnabled "true") }}
          - name: tls-kafka-client-volumemount
            mountPath: {{ template "eric-fh-alarm-handler.kafka.client.cert.mountFolder" . }}
            readOnly: true
{{- end }}
{{- if eq $redisWriterEnabled "true" }}
          - name: tls-redis-client-cert-volumemount
            mountPath: {{ template "eric-fh-alarm-handler.redis.client.cert.mountFolder" . }}
            readOnly: true
{{- end }}
          - name: tls-document-db-client-cert-volumemount
            mountPath: {{ template "eric-fh-alarm-handler.pg.client.cert.mountFolder" . }}
            readOnly: true

          - name: tls-document-db-admin-cert-volumemount
            mountPath: {{ template "eric-fh-alarm-handler.pg.admin.cert.mountFolder" . }}
            readOnly: true
{{- end }}
          - name: faultmappings
            mountPath: {{ template "eric-fh-alarm-handler.faultmappings.mountFolder" . }}
          - name: memory-storage-alarm-handler
            mountPath: {{ template "eric-fh-alarm-handler.memoryStorage.mountFolderAlarmHandler" . }}
            readOnly: false
{{- if $logshipperEnabled }}
{{- include "eric-fh-alarm-handler.logshipper-storage-path" . | indent 10 }}
        command: ["sh"]
        args: ["-c",  "/app/init.sh {{ $logRedirect }}"]
{{- else }}
        command: ["sh"]
        args: ["-c",  "/app/eric-fh-alarm-handler"]
{{- end }}
{{- if $logshipperEnabled }}
{{- include "eric-fh-alarm-handler.logshipper-container" . | indent 6 }}
{{- end }}
{{- include "eric-fh-alarm-handler.authz-proxy-container.spec" . | nindent 6 }}
      {{- if include "eric-fh-alarm-handler.nodeSelector" . }}
      nodeSelector:
        {{ template "eric-fh-alarm-handler.nodeSelector" . }}
      {{- end }}
      volumes:
      - name: faultmappings
        configMap:
          name: {{ .Values.alarmhandler.configmap.faultmappings | quote }}
      - name: log-level-config
        configMap:
          name: {{ template "eric-fh-alarm-handler.logLevel.ConfigmapName" . }}
          defaultMode: 0444
          items:
            - key: LOG_CTRL_FILE
              path: logcontrol.json
{{- if eq $tls "true" }}
{{- if eq (include "eric-fh-alarm-handler.fiAPI.httpsEnabled" .) "true" }}
      - name: fi-server-client-ca-cert-volumemount
        secret:
          secretName: {{ template "eric-fh-alarm-handler.fiAPI.client.ca.secretname" . }}

      - name: fi-server-cert-volumemount
        secret:
          secretName: {{ template "eric-fh-alarm-handler.fiAPI.server.secretname" . }}

      - name: fi-client-cert-volumemount
        secret:
          secretName: {{ template "eric-fh-alarm-handler.fiAPI.client.secretname" . }}
{{- end }}
      - name: tls-server-cert-volumemount
        secret:
          secretName: {{ template "eric-fh-alarm-handler.restapi.server.secretname" . }}
      - name: tls-trusted-ca-cert-volumemount
        secret:
          secretName: {{ template "eric-fh-alarm-handler.tls.trusted.cacert.secretname" . }}
      - name: tls-client-ca-cert-volumemount
        secret:
          secretName: {{ template "eric-fh-alarm-handler.client.ca.secretname" . }}
      - name: tls-client-cert-volumemount
        secret:
          secretName: {{ template "eric-fh-alarm-handler.client.secretname" . }}
      - name: tls-client-cert2-volumemount
        secret:
          secretName: {{ template "eric-fh-alarm-handler.name" . }}-tls-client-secret2
{{- if (eq $kafkaEnabled "true") }}
      - name: tls-kafka-client-volumemount
        secret:
          secretName: {{ template "eric-fh-alarm-handler.kafka.client.secretname" . }}
{{- end }}
{{- if eq $redisWriterEnabled "true" }}
      - name: tls-redis-client-cert-volumemount
        secret:
          secretName: {{ template "eric-fh-alarm-handler.redis.client.secretname" . }}
{{- end }}
      - name: tls-document-db-client-cert-volumemount
        secret:
          secretName: {{ template "eric-fh-alarm-handler.pg.client.secretname" . }}
      - name: tls-document-db-admin-cert-volumemount
        secret:
          secretName: {{ template "eric-fh-alarm-handler.pg.admin.secretname" . }}
{{- end }}
      - name: memory-storage-topic-creator
        emptyDir:
          sizeLimit: 100Mi
          medium: Memory
      - name: memory-storage-alarm-handler
        emptyDir:
          sizeLimit: 100Mi
          medium: Memory
{{- if and (eq $tls "true") (eq $probesTLSOnly "true") }}
      - name: "probes-server-cert"
        secret:
          secretName: {{ template "eric-fh-alarm-handler.probes.server.certSecret" . }}
{{- end }}
{{- if eq $metricsEnabled "true" }}
{{- if and (eq $tls "true") (eq $metricsTLSOnly "true") }}
      - name: "metrics-server-cert"
        secret:
          secretName: {{ template "eric-fh-alarm-handler.metrics.server.certSecret" . }}
      - name: "metrics-client-cacert"
        secret:
          secretName: {{ .Values.pmServer.caSecret }}
{{- end }}
{{- end }}
{{- if $logshipperEnabled }}
{{- include "eric-fh-alarm-handler.logshipper-volume" . | indent 6 }}
{{- end }}
{{ include "eric-fh-alarm-handler.authz-proxy-volume.spec" . | indent 6 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      affinity:
        podAntiAffinity: {{ include "eric-fh-alarm-handler.podAntiAffinity" . | nindent 10 }}
{{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
