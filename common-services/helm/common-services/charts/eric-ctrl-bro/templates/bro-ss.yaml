{{- $configMapName := include "eric-ctrl-bro.name" . -}}
{{- $g := fromJson (include "eric-ctrl-bro.globalMap" .) -}}

apiVersion: apps/v1
{{- if .Values.osmn.enabled }}
kind: Deployment
{{- else }}
kind: StatefulSet
{{- end }}
metadata:
  name: {{ template "eric-ctrl-bro.name" . }}
  labels:
{{ include "eric-ctrl-bro.k8sLabels" . | indent 4 }}
{{- include "eric-ctrl-bro.prodInfoLabels" . | indent 4}}
  annotations:
{{ include "eric-ctrl-bro.prodInfoAnnotations" . | indent 4 }}
spec:
  selector:
    matchLabels:
     app.kubernetes.io/name: {{ template "eric-ctrl-bro.name" . }}
     app.kubernetes.io/instance: {{.Release.Name | quote }}
  {{- if not .Values.osmn.enabled }}
  serviceName: {{ template "eric-ctrl-bro.name" . }}
  {{- end }}
  replicas: {{ .Values.bro.replicas }}
  {{- if .Values.osmn.enabled }}
  strategy:
  {{- else }}
  updateStrategy:
  {{- end }}
    type: {{ .Values.updateStrategy.type | quote }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "eric-ctrl-bro.name" . }}
        app.kubernetes.io/version: {{ template "eric-ctrl-bro.version" . }}
        app.kubernetes.io/instance: {{.Release.Name | quote }}
        {{- include "eric-ctrl-bro.prodInfoLabels" . | indent 8}}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/serviceproperties-configmap.yaml") . | sha256sum }}
        checksum/log: {{ include (print $.Template.BasePath "/logging-configmap.yaml") . | sha256sum }}
        checksum/check: {{ include (print $.Template.BasePath "/productcheck-configmap.yaml") . | sha256sum }}
        {{- if eq .Values.metrics.enabled true }}
        prometheus.io/path: /actuator/prometheus
        prometheus.io/scrape: "true"
        {{- if (eq (include "eric-ctrl-bro.globalSecurity" .) "true") }}
        prometheus.io/port: "7003"
        prometheus.io/scheme: https
        {{- else }}
        prometheus.io/port: "7001"
        prometheus.io/scheme: http
        {{- end }}
        {{- end }}
{{ include "eric-ctrl-bro.prodInfoAnnotations" . | indent 8 }}
    spec:
{{- include "eric-ctrl-bro.pullsecret" . }}
      serviceAccountName: {{ template "eric-ctrl-bro.serviceAccountName" . }}
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: {{.Values.terminationGracePeriodSeconds}}
      enableServiceLinks: false
      securityContext:
        fsGroup: {{ include "eric-ctrl-bro.fsGroup.coordinated" . }}
      containers:
      - name: {{ template "eric-ctrl-bro.name" . }}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
            - all
        image: {{template "eric-ctrl-bro.image" . }}
        {{ include "eric-ctrl-bro.pullpolicy" . }}
        env:
        - name: STORAGE_CONNECTIVITY
          value: {{ .Values.persistence.persistentVolumeClaim.storageConnectivity | quote }}
        - name: TZ
          value: {{ index $g "timezone" }}
        - name: {{ .Values.bro.namespaceEnvironmentVariable }}
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: grpc
          containerPort: {{template "eric-ctrl-bro.globalBroGrpcServicePort" .}}
        - name: rest
          containerPort: {{.Values.bro.restPort}}
          {{- if (eq (include "eric-ctrl-bro.globalSecurity" .) "true") }}
        - name: resttls
          containerPort: {{.Values.bro.restTlsPort}}
        - name: pm-tls
          containerPort: {{.Values.bro.pmTlsPort}}
          {{- if eq .Values.bro.enableConfigurationManagement true }}
        - name: cmm-tls
          containerPort: {{.Values.bro.cmmNotifTlsPort}}
          {{- end }}
          {{- end }}
        resources:
{{ include "eric-ctrl-bro.resources" . | nindent 10 }}
        livenessProbe:
          {{ include "eric-ctrl-bro.livenessProbe" . -}}
          {{ include "eric-ctrl-bro.livenessProbeConfig" . | indent 10}}
        readinessProbe:
          {{ include "eric-ctrl-bro.readinessProbe" . -}}
          {{ include "eric-ctrl-bro.readinessProbeConfig" . | indent 10}}
        volumeMounts:
{{ include "eric-ctrl-bro.volumeMounts" . | indent 8 }}
        {{- if eq .Values.osmn.enabled false }}
        - name: backup-data
          mountPath: {{ .Values.bro.backupLocation | quote }}
        {{- end }}
      {{- if or (not (empty .Values.tolerations)) (.Values.osmn.enabled) }}
      {{ $tolerations := include "eric-ctrl-bro.tolerations" . }}
      {{- if $tolerations -}}
      tolerations:
{{ $tolerations | trim | indent 6 -}}
      {{- end }}
      {{- end }}
      volumes:
{{ include "eric-ctrl-bro.volumes" . | indent 6 }}
{{ include "eric-ctrl-bro.nodeSelector" . | indent 6 }}
  {{- if not .Values.osmn.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: backup-data
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: {{ .Values.persistence.persistentVolumeClaim.size | quote }}
      {{- if and (ne .Values.persistence.persistentVolumeClaim.storageClassName "default") (.Values.persistence.persistentVolumeClaim.storageClassName) }}
      storageClassName: {{ .Values.persistence.persistentVolumeClaim.storageClassName | quote }}
      {{- end }}
  {{- end }}
