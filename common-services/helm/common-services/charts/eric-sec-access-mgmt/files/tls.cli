## These commands configure TLS

## The following will configure a Keystore, Key manager and SSL context used by the IAM server
## env.KEYSTORE_SECRET needs to exist and is used to access the keystore contents
## In the current implementation env.KEYSTORE_SECRET is not permanently stored in the ENV of the container
/subsystem=elytron/key-store=httpsKS:add(path=server.keystore, relative-to=jboss.server.config.dir,credential-reference={clear-text=${env.KEYSTORE_SECRET}},type=JKS)
/subsystem=elytron/key-manager=httpsKM:add(key-store=httpsKS,credential-reference={clear-text=${env.KEYSTORE_SECRET}})
## Create truststore to be used for Auth proxy mTLS
{{- $global := fromJson (include "eric-sec-access-mgmt.global" .) -}}
{{- if $global.security.tls.enabled }}
/subsystem=elytron/key-store=qsTrustStore:add(path=server.truststore,relative-to=jboss.server.config.dir,credential-reference={clear-text=${env.KEYSTORE_SECRET}},type=JKS)
/subsystem=elytron/trust-manager=qsTrustManager:add(key-store=qsTrustStore)
{{- if eq .Values.service.endpoints.iam.tls.verifyClientCertificate "optional" }}
/subsystem=elytron/server-ssl-context=httpsSSC:add(key-manager=httpsKM,protocols=["TLSv1.2"], trust-manager=qsTrustManager, want-client-auth=true)
{{- else }}
/subsystem=elytron/server-ssl-context=httpsSSC:add(key-manager=httpsKM,protocols=["TLSv1.2"], trust-manager=qsTrustManager, need-client-auth=true)
{{- end }}
{{- else }}
/subsystem=elytron/server-ssl-context=httpsSSC:add(key-manager=httpsKM,protocols=["TLSv1.2"])
{{- end }}
/subsystem=undertow/server=default-server/https-listener=https:undefine-attribute(name=security-realm)
/subsystem=undertow/server=default-server/https-listener=https:write-attribute(name=ssl-context,value=httpsSSC)
/subsystem=undertow/server=default-server/https-listener=https: write-attribute(name=proxy-address-forwarding, value=${env.PROXY_ADDRESS_FORWARDING})

## Remove references to the connector

/subsystem=remoting/http-connector=http-remoting-connector:write-attribute(name=connector-ref, value=https)

## Remove HTTP listener that exposes the unsecure port
{{- if eq .Values.service.endpoints.iam.tls.enforced "required" }}
/subsystem=undertow/server=default-server/http-listener=default:remove
{{- end }}

