{{- $sa_name := printf "%s-sa"  (include "eric-sec-access-mgmt.name" .) -}}
{{- if not (lookup "v1" "ServiceAccount" .Release.Namespace $sa_name ) }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "eric-sec-access-mgmt.name" . }}-sa
  labels: {{- include "eric-sec-access-mgmt.labels" . | nindent 4 }}
  annotations:
    {{- $hook := dict -}}
    {{- $_ := set $hook "helm.sh/hook" "pre-upgrade" -}}
    {{- $_ := set $hook "helm.sh/hook-delete-policy" "hook-succeeded,before-hook-creation" -}}
    {{- $_ := set $hook "helm.sh/hook-weight" "1" -}}
    {{- $commonAnn := include "eric-sec-access-mgmt.common-annotations" . | fromYaml -}}
    {{- include "eric-sec-access-mgmt.mergeAnnotations" (dict "location" (.Template.Name) "sources" (list $hook $commonAnn)) | trim | nindent 4 }}
{{- end }}

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ template "eric-sec-access-mgmt.name" . }}-pre-upgrade-role
  labels: {{- include "eric-sec-access-mgmt.labels" . | nindent 4 }}
  annotations:
    {{- $hook := dict -}}
    {{- $_ := set $hook "helm.sh/hook" "pre-upgrade" -}}
    {{- $_ := set $hook "helm.sh/hook-delete-policy" "hook-succeeded,before-hook-creation" -}}
    {{- $_ := set $hook "helm.sh/hook-weight" "2" -}}
    {{- $commonAnn := include "eric-sec-access-mgmt.common-annotations" . | fromYaml -}}
    {{- include "eric-sec-access-mgmt.mergeAnnotations" (dict "location" (.Template.Name) "sources" (list $hook $commonAnn)) | trim | nindent 4 }}
rules:
- apiGroups: ["apps"]
  resources: ["statefulsets"]
  resourceNames: ["{{ template "eric-sec-access-mgmt.name" . }}"]
  verbs: ["get","delete"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ template "eric-sec-access-mgmt.name" . }}-pre-upgrade-role-binding
  labels: {{- include "eric-sec-access-mgmt.labels" . | nindent 4 }}
  annotations:
    {{- $hook := dict -}}
    {{- $_ := set $hook "helm.sh/hook" "pre-upgrade" -}}
    {{- $_ := set $hook "helm.sh/hook-delete-policy" "hook-succeeded,before-hook-creation" -}}
    {{- $_ := set $hook "helm.sh/hook-weight" "3" -}}
    {{- $commonAnn := include "eric-sec-access-mgmt.common-annotations" . | fromYaml -}}
    {{- include "eric-sec-access-mgmt.mergeAnnotations" (dict "location" (.Template.Name) "sources" (list $hook $commonAnn)) | trim | nindent 4 }}
subjects:
- kind: ServiceAccount
  name: {{ template "eric-sec-access-mgmt.name" . }}-sa
roleRef:
  kind: Role
  name: {{ template "eric-sec-access-mgmt.name" . }}-pre-upgrade-role
  apiGroup: rbac.authorization.k8s.io

---

{{- $global := fromJson (include "eric-sec-access-mgmt.global" .) -}}
{{- $rb_name := printf "%s-sa-security-policy"  (include "eric-sec-access-mgmt.name" .) -}}
{{- if and $global.security.policyBinding.create (not (lookup "rbac.authorization.k8s.io/v1" "RoleBinding" .Release.Namespace $rb_name )) -}}
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ template "eric-sec-access-mgmt.name" . }}-sa-security-policy
  annotations:
    {{- $hook := dict -}}
    {{- $_ := set $hook "helm.sh/hook" "pre-upgrade" -}}
    {{- $_ := set $hook "helm.sh/hook-delete-policy" "hook-succeeded,before-hook-creation" -}}
    {{- $_ := set $hook "helm.sh/hook-weight" "4" -}}
    {{- $securityAnnotations := include "eric-sec-access-mgmt.securityPolicy.annotations" . | fromYaml -}}
    {{- $commonAnn := include "eric-sec-access-mgmt.common-annotations" . | fromYaml -}}
    {{- include "eric-sec-access-mgmt.mergeAnnotations" (dict "location" (.Template.Name) "sources" (list $hook $securityAnnotations $commonAnn)) | trim | nindent 4 }}
  labels:
    {{- include "eric-sec-access-mgmt.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ index $global.security "policyReferenceMap" "default-restricted-security-policy" }}
subjects:
- kind: ServiceAccount
  name: {{ template "eric-sec-access-mgmt.name" . }}-sa
{{- end -}}
