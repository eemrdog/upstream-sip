{{- $service := .Values.service -}}
{{- $global := fromJson (include "eric-sec-access-mgmt.global" .) -}}
apiVersion: v1
kind: Service
metadata:
  name: {{ template "eric-sec-access-mgmt.name" . }}-http
  annotations:
    {{- include "eric-sec-access-mgmt.common-annotations" . | nindent 4 }}
    #the below annotation must be added for ICCR to work
    {{- if and $global.security.tls.enabled .Values.ingress.enabled}}
    contour.heptio.com/upstream-protocol.tls: "{{ template "eric-sec-access-mgmt.serviceHttpsPort" . }},http"
    {{- end }}
{{- if $service.annotations }}
{{ toYaml $service.annotations | indent 4 }}
{{- end }}
  labels:
    {{- include "eric-sec-access-mgmt.labels" . | indent 4 }}
{{- if $service.labels }}
{{ toYaml $service.labels | indent 4 }}
{{- end }}

#TODO: should we use service.spec.sessionAffinity to “ClientIP” as recommended by Keycloak documentation: Sticky Sessions
spec:
  type: ClusterIP
  ports:
    {{- if $global.security.tls.enabled }}
    - name: https-tls
      port: {{ template "eric-sec-access-mgmt.serviceHttpsPort" . }}
      protocol: TCP
      targetPort: https-tls
    - name: https-admin
      port: {{ template "eric-sec-access-mgmt.serviceAdminConsolePort" . }}
      protocol: TCP
      targetPort: https-admin
    {{- end }}
    {{- if or (eq .Values.service.endpoints.iam.tls.enforced "optional") (not $global.security.tls.enabled) }}
    - name: http
      port: {{ template "eric-sec-access-mgmt.serviceHttpPort" . }}
      protocol: TCP
      targetPort: http
    - name: http-admin
      port: {{ template "eric-sec-access-mgmt.adminPortHttp" . }}
      protocol: TCP
      targetPort: http-admin
    {{- end }}
  selector:
    app: {{ template "eric-sec-access-mgmt.name" . }}
    release: {{ .Release.Name | quote }}
  {{- if $global.internalIPFamily }}
  ipFamilies: [{{ $global.internalIPFamily | quote }}]
  {{- end }}
