{{- $globals       := fromJson (include "eric-sec-key-management.global" .) -}}
{{- $initFast      := eq $globals.featureGates.caBootstrap_v2 true -}}
{{- $etcd          := eq .Values.persistence.type "etcd" }}
{{- $execJob       := and $initFast $etcd }}
{{- $shelter       := eq .Values.shelter.enabled true }}
{{- $networkPolicy := eq (include "eric-sec-key-management.networkPolicy" .) "true" -}}

{{ if $execJob }}

apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "eric-sec-key-management.name" . }}-job-sa
  labels:
    {{- include "eric-sec-key-management.labels" . | nindent 4 }}
  annotations:
    {{- include "eric-sec-key-management.annotations" . | nindent 4 }}

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ template "eric-sec-key-management.name" . }}-job-role
  labels:
    {{- include "eric-sec-key-management.labels" . | nindent 4 }}
  annotations:
    {{- include "eric-sec-key-management.annotations" . | nindent 4 }}
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["{{ template "eric-sec-key-management.name" . }}-unseal-key"]
    verbs: ["get", "update"]
  {{- if .Values.shelter.enabled }}
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["{{ template "eric-sec-key-management.name" . }}-shelter-key"]
    verbs: ["get", "update"]
  {{- end }}
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["{{ .Values.persistence.etcd.tls.trustedCaSecret }}",
                    "{{ .Values.persistence.etcd.serviceName }}-ca",
                    "{{ .Values.persistence.etcd.serviceName }}-etcdctl-client-cert",
                    "{{ .Values.persistence.etcd.serviceName }}-cert",
                    "{{ .Values.persistence.etcd.serviceName }}-peer-cert",
                    "{{ template "eric-sec-key-management.name" . }}-client-cert",
                    "{{ template "eric-sec-key-management.name" . }}-kms-cert"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: ["{{ template "eric-sec-key-management.configMapNameJob" . }}"]
    verbs: ["get", "patch"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ template "eric-sec-key-management.name" . }}-job-rolebinding
  labels:
    {{- include "eric-sec-key-management.labels" . | nindent 4 }}
  annotations:
    {{- include "eric-sec-key-management.annotations" . | nindent 4 }}
roleRef:
  kind: Role
  name: {{ template "eric-sec-key-management.name" . }}-job-role
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: {{ template "eric-sec-key-management.name" . }}-job-sa

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "eric-sec-key-management.configMapNameJob" . }}
  labels:
    {{- include "eric-sec-key-management.labels" . | nindent 4 }}
  annotations:
    {{- include "eric-sec-key-management.annotations" . | nindent 4 }}
data:
  kms-job-config.json: |
    {{- tpl (.Files.Get "files/kms-job-config.json") . | nindent 4 }}
  kms-migration.json: |
    {{- tpl (.Files.Get "files/kms-migration.json") . | nindent 4 }}
  {{- if $shelter }}
  shelter-job-config.json: |
    {{- tpl (.Files.Get "files/shelter-job-config.json") . | nindent 4 }}
  shelter-migration.json: |
    {{- tpl (.Files.Get "files/shelter-migration.json") . | nindent 4 }}
  {{- end }}

---

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "eric-sec-key-management.name" . }}-job-{{ .Release.Revision }}
  labels:
    {{- include "eric-sec-key-management.labels" . | nindent 4 }}
  annotations:
    {{- include "eric-sec-key-management.annotations" . | nindent 4 }}
spec:
  template:
    metadata:
      labels:
        {{- $accessLabels := dict -}}
        {{- if and $etcd $networkPolicy }}
          {{- $_ := set $accessLabels (printf "%s-access" .Values.persistence.etcd.serviceName) "true" -}}
        {{- end }}
        {{- $commonLabels := include "eric-sec-key-management.labels" . | fromYaml -}}
        {{- include "eric-sec-key-management.mergeLabels" (dict "location" .Template.Name "sources" (list $accessLabels $commonLabels)) | trim | nindent 8 }}
      annotations:
        {{- include "eric-sec-key-management.annotations" . | nindent 8 }}
    spec:
      {{- if index .Values.podPriority "eric-sec-key-management-main" "priorityClassName" }}
      priorityClassName: {{ index .Values.podPriority "eric-sec-key-management-main" "priorityClassName" | quote }}
      {{- end }}
      restartPolicy: OnFailure
      containers:
        - name: "eric-sec-key-management-kms-configurator"
          image: {{ include "eric-sec-key-management.bootstrapJobImagePath" . }}
          imagePullPolicy: {{ template "eric-sec-key-management.imagePullPolicy" . }}
          env:
            - name: KMS_ADMIN_SVC_ACC_NAME
              value: {{ template "eric-sec-key-management.name" . }}-admin
            - name: KMS_UNSEAL_KEY_SECRET_NAME
              value: {{ template "eric-sec-key-management.name" . }}-unseal-key
            {{- if $shelter }}
            - name: KMS_SHELTER_KEY_SECRET_NAME
              value: {{ template "eric-sec-key-management.name" . }}-shelter-key
            {{- end }}
            # Vault process logging (3pp)
            - name: VAULT_LOG_LEVEL
              value: {{ .Values.logLevel | quote }}
            # Python script logging
            - name: LOG_LEVEL
              value: {{ .Values.logLevel | quote }}
            - name: SERVICE_NAME
              value: {{ template "eric-sec-key-management.name" . }}
            - name: SHELTER_ENABLED
              value: {{ if $shelter }}"true"{{ else }}"false"{{ end }}
            # kubernetes cluster domain that gets populated to Subject Alternative Name
            - name: CLUSTER_DOMAIN
              value: {{ .Values.bootstrap.clusterDomain | quote }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ETCDCTL_ENDPOINT
              value: "{{ .Values.persistence.etcd.serviceName }}:{{ .Values.persistence.etcd.servicePort }}"
          command: ["catatonit", "--"]
          args: ["/kms/kms_job_init_conf.py"]
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
                - all
          resources:
            limits:
              {{- include "eric-sec-key-management.bootstrapjob-resource-limits" . | nindent 14 }}
            requests:
              {{- include "eric-sec-key-management.bootstrapjob-resource-requests" . | nindent 14 }}
          volumeMounts:
            - name: kms-job-tmp
              mountPath: "/tmp"
            - name: kms-job-run
              mountPath: "/kms/run"
            - name: vault-storage
              mountPath: /kms/data
            - name: vault-config
              mountPath: /kms/etc/vault
              readOnly: true
            {{- if $shelter }}
            - name: shelter-config
              mountPath: /kms/etc/shelter
              readOnly: true
            {{- end }}
            - name: admin-sa-token
              mountPath: "/run/secrets/admin-sa-token"
              readOnly: true
            - name: auth-sa-token
              mountPath: "/run/secrets/auth-sa-token"
              readOnly: true
      serviceAccountName: {{ template "eric-sec-key-management.name" . }}-job-sa
      volumes:
      - name: kms-job-tmp
        emptyDir:
          sizeLimit: "10Mi"
          medium: "Memory"
      - name: kms-job-run
        emptyDir:
          sizeLimit: "10Mi"
          medium: "Memory"
      - name: vault-storage
        emptyDir:
          sizeLimit: "50Mi"
          medium: "Memory"
      - name: vault-config
        configMap:
          name: {{ template "eric-sec-key-management.configMapNameJob" . }}
          items:
            - key: 'kms-job-config.json'
              path: 'vault.json'
            - key: 'kms-migration.json'
              path: 'migration-status.json'
      {{- if $shelter }}
      - name: shelter-config
        configMap:
          name: {{ template "eric-sec-key-management.configMapNameJob" . }}
          items:
            - key: 'shelter-job-config.json'
              path: 'vault.json'
            - key: 'shelter-migration.json'
              path: 'migration-status.json'
      {{- end }}
      - name: admin-sa-token
        secret:
          secretName: {{ template "eric-sec-key-management.name" . }}-admin
      - name: auth-sa-token
        secret:
          secretName: {{ template "eric-sec-key-management.name" . }}-auth-token
      {{- if include "eric-sec-key-management.imagePullSecrets" . }}
      imagePullSecrets:
        - name: {{ template "eric-sec-key-management.imagePullSecrets" . }}
      {{- end }}
      {{- if (or .Values.nodeSelector $globals.nodeSelector) }}
      nodeSelector: {{- include "eric-sec-key-management.nodeSelector" . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
