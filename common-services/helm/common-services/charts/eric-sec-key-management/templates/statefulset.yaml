# Service account token used for authenticating other service accounts
# against Kubernetes API Server.

apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "eric-sec-key-management.name" . }}-auth
  labels:
    {{- include "eric-sec-key-management.labels" . | nindent 4 }}
  annotations:
    {{- include "eric-sec-key-management.product-info" . | indent 4 }}

---

# Explicitly request a service account token secret with
# well known name, so that it can be mounted in the pod.
# This is a workaround for k8s 1.21+, where bound service account tokens
# that are automatically projected into pods have limited time to live.
# Vault is not correctly adapted to this new feature, and require
# the legacy tokens which never expire.
# No helm hooks used, so Helm 3.1.0+ is required, otherwise the
# installation order of service accounts and secrets are not compatible.

apiVersion: v1
kind: Secret
metadata:
  name: {{ template "eric-sec-key-management.name" . }}-auth-token
  labels:
    {{- include "eric-sec-key-management.labels" . | nindent 4 }}
  annotations:
    {{- include "eric-sec-key-management.product-info" . | indent 4 }}
    kubernetes.io/service-account.name: {{ template "eric-sec-key-management.name" . }}-auth
type: kubernetes.io/service-account-token

---

{{- $etcd         := eq .Values.persistence.type "etcd" }}
{{- $pvc          := eq .Values.persistence.type "pvc" }}
{{- $tlsEnabled   := eq .Values.service.tls.enabled true }}
{{- $etcdTls      := and $etcd .Values.persistence.etcd.tls.enabled }}
{{- $haEnabled    := gt (.Values.replicas | int64) 1 }}
{{- $shelter      := eq .Values.shelter.enabled true }}
{{- $metrics      := eq .Values.metrics.enabled true }}
{{- $globals      := fromJson (include "eric-sec-key-management.global" .) -}}
{{- $startupProbe := semverCompare ">=1.18-0" (printf "%s.%s" .Capabilities.KubeVersion.Major (trimSuffix "+" .Capabilities.KubeVersion.Minor)) -}}
{{- $logStdout    := has "stdout" .Values.log.outputs -}}
{{- $logStream    := has "stream" .Values.log.outputs -}}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "eric-sec-key-management.name" . }}-main
  labels:
    {{- include "eric-sec-key-management.labels" . | nindent 4 }}
  annotations:
    {{- include "eric-sec-key-management.product-info" . | indent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  serviceName: {{ template "eric-sec-key-management.name" . }}-peer
  podManagementPolicy: OrderedReady
  selector:
    matchLabels:
      app: {{ template "eric-sec-key-management.name" . }}
  updateStrategy:
    type: {{ .Values.updateStrategy.type | quote }}
  template:
    metadata:
      labels:
        {{- include "eric-sec-key-management.labels" . | nindent 8 }}
      annotations:
        prometheus.io/scrape: {{ .Values.metrics.enabled | quote }}
        prometheus.io/port: "8888"
        {{- include "eric-sec-key-management.product-info" . | indent 8 }}
    spec:
      {{- if $pvc }}
      securityContext:
        fsGroup: {{ include "eric-sec-key-management.fsGroup.coordinated" . }}
      {{- end }}
      initContainers:
        {{- if $etcdTls }}
        - name: "kms-ca"
          image: {{ include "eric-sec-key-management.caImagePath" . }}
          imagePullPolicy: {{ template "eric-sec-key-management.pullPolicy" . }}
          env:
            - name: ETCDCTL_ENDPOINT
              value: "{{ .Values.persistence.etcd.serviceName }}:{{ .Values.persistence.etcd.servicePort }}"
            - name: LOG_LEVEL
              value: {{ .Values.logLevel | quote }}
            # For logging
            - name: SERVICE_ID
              value: {{ template "eric-sec-key-management.name" . }}
            # Client certificate CN
            - name: COMMON_NAME
              value: {{ template "eric-sec-key-management.name" . }}
            - name: SHELTER_ENABLED
              value: {{ if $shelter }}"true"{{ else }}"false"{{ end }}
          command: ["catatonit", "--"]
          {{- if $logStream }}
          args: ["/kms/stdout-redirect", "-logfile", "/logs/kms-ca.log", "-redirect", {{ include "eric-sec-key-management.log-redirect-param" . }}, "-run", "/kms/dced-configurator"]
          {{- else }}
          args: ["/kms/dced-configurator"]
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
                - all
          resources:
            limits:
              {{- include "eric-sec-key-management.ca-resource-limits" . | nindent 14 }}
            requests:
              {{- include "eric-sec-key-management.ca-resource-requests" . | nindent 14 }}
          volumeMounts:
            - name: kms-ca-tmp
              mountPath: "/tmp"
            - name: kms-ca-run
              mountPath: "/kms/run"
            - name: bootstrap-ca
              mountPath: "/run/secrets/tls-bootstrap-ca"
              readOnly: true
            - name: ca-trusted-cert
              mountPath: "/run/secrets/tls-root-ca"
              readOnly: true
            - name: etcd-root-client-certs
              mountPath: "/run/secrets/etcd-root-client-certs"
              readOnly: true
            {{- if $logStream }}
            {{- include "eric-sec-key-management.logshipper-storage-path" . | indent 12 }}
            {{- end }}
        {{- end }}
        - name: "kms-mon"
          image: {{ include "eric-sec-key-management.unsealerImagePath" . }}
          imagePullPolicy: {{ template "eric-sec-key-management.pullPolicy" . }}
          env:
            - name: KMS_ADMIN_SVC_ACC_NAME
              value: {{ template "eric-sec-key-management.name" . }}-admin
            - name: KMS_UNSEAL_KEY_SECRET_NAME
              value: {{ template "eric-sec-key-management.name" . }}-unseal-key
            {{- if $shelter }}
            - name: KMS_SHELTER_KEY_SECRET_NAME
              value: {{ template "eric-sec-key-management.name" . }}-shelter-key
            {{- end }}
            # Vault process logging (3pp)
            - name: VAULT_LOG_LEVEL
              value: {{ .Values.logLevel | quote }}
            # Python script logging
            - name: LOG_LEVEL
              value: {{ .Values.logLevel | quote }}
            - name: SERVICE_NAME
              value: {{ template "eric-sec-key-management.name" . }}
            - name: SHELTER_ENABLED
              value: {{ if $shelter }}"true"{{ else }}"false"{{ end }}
            {{- if $haEnabled }}
            # Vault storage configuration
            - name: ETCD_HA_ENABLED
              value: "true"
            {{- end }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          command: ["catatonit", "--"]
          {{- if $logStream }}
          args: ["/kms/stdout-redirect", "-logfile", "/logs/kms-mon.log", "-redirect", {{ include "eric-sec-key-management.log-redirect-param" . }}, "-run", "/kms/kms_init_start.py"]
          {{- else }}
          args: ["/kms/kms_init_start.py"]
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
                - all
          resources:
            limits:
              {{- include "eric-sec-key-management.unsealer-resource-limits" . | nindent 14 }}
            requests:
              {{- include "eric-sec-key-management.unsealer-resource-requests" . | nindent 14 }}
          volumeMounts:
            - name: kms-mon-tmp
              mountPath: "/tmp"
            - name: kms-mon-run
              mountPath: "/kms/run"
            {{- if $pvc }}
            - name: vault-storage
              mountPath: /kms/data
            {{- end }}
            {{- if $etcdTls }}
            - name: ca-trusted-cert
              mountPath: /run/secrets/tls-ca-root-cert
              readOnly: true
            - name: vault-client-cert
              mountPath: "/run/secrets/tls-client-certs"
              readOnly: true
            {{- end }}
            - name: vault-config
              mountPath: /kms/etc/vault
              readOnly: true
            {{- if $shelter }}
            - name: shelter-config
              mountPath: /kms/etc/shelter
              readOnly: true
            {{- end }}
            - name: admin-sa-token
              mountPath: "/run/secrets/admin-sa-token"
              readOnly: true
            - name: auth-sa-token
              mountPath: "/run/secrets/auth-sa-token"
              readOnly: true
            {{- if $logStream }}
            {{- include "eric-sec-key-management.logshipper-storage-path" . | indent 12 }}
            {{- end }}
      containers:
        - name: "kms"
          image: {{ include "eric-sec-key-management.vaultImagePath" . }}
          imagePullPolicy: {{ template "eric-sec-key-management.pullPolicy" . }}
          command: ["catatonit", "--"]
          {{- if $logStream }}
          args: ["/kms/stdout-redirect", "-logfile", "/logs/kms.log", "-redirect", {{ include "eric-sec-key-management.log-redirect-param" . }}, "-run", "/kms/start.py"]
          {{- else }}
          args: ["/kms/start.py"]
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
                - all
          resources:
            limits:
              {{- include "eric-sec-key-management.vault-resource-limits" . | nindent 14 }}
            requests:
              {{- include "eric-sec-key-management.vault-resource-requests" . | nindent 14 }}
          env:
            # Vault process logging (3pp)
            - name: VAULT_LOG_LEVEL
              value: {{ .Values.logLevel | quote }}
            # Python script logging
            - name: LOG_LEVEL
              value: {{ .Values.logLevel | quote }}
            - name: SERVICE_NAME
              value: {{ template "eric-sec-key-management.name" . }}
            - name: AUTO_UNSEAL
              value: {{ .Values.unsealAutomatically | quote }}
            # Vault CLI settings
            - name: VAULT_ADDR
              value: "http://127.0.0.1:8202"
            {{- if $haEnabled }}
            # Vault storage configuration
            - name: ETCD_HA_ENABLED
              value: "true"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
              # The address that is advertised for client redirection
            - name: VAULT_API_ADDR
              {{- if $tlsEnabled }}
              value: "https://$(POD_NAME).{{ template "eric-sec-key-management.name" . }}-peer:8200"
              {{- else }}
              value: "http://$(POD_NAME).{{ template "eric-sec-key-management.name" . }}-peer:8200"
              {{- end }}
              # The address that is advertised for request forwarding
            - name: VAULT_CLUSTER_ADDR
              value: "https://$(POD_NAME).{{ template "eric-sec-key-management.name" . }}-peer:8201"
            {{- end }}
          {{- if $startupProbe }}
          startupProbe:
            httpGet:
              path: "/v1/sys/health?standbyok=true&activecode=204&standbycode=204&drsecondarycode=204&uninitcode=204&sealedcode=204"
              port: 8200
              {{- if $tlsEnabled }}
              scheme: HTTPS
              {{- end }}
            {{- include "eric-sec-key-management.vault-startup" . | nindent 12 }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: "/v1/sys/health?standbyok=true&activecode=204&standbycode=204&drsecondarycode=204&uninitcode=204&sealedcode=204"
              port: 8200
              {{- if $tlsEnabled }}
              scheme: HTTPS
              {{- end }}
            {{- include "eric-sec-key-management.vault-liveness" . | nindent 12 }}
          readinessProbe:
            exec:
              command: ["/kms/readiness_seal_check.bash", "{{ template "eric-sec-key-management.name" . }}-unseal-key", "8202"]
            {{- include "eric-sec-key-management.vault-readiness" . | nindent 12 }}
          ports:
            - name: https-remote
              containerPort: 8200
            - name: https-cluster
              containerPort: 8201
            - name: http-local
              containerPort: 8202
          volumeMounts:
            - name: kms-tmp
              mountPath: "/tmp"
            - name: kms-run
              mountPath: "/kms/run"
            {{- if $pvc }}
            - name: vault-storage
              mountPath: /kms/data
            {{- end }}
            {{- if $tlsEnabled }}
            - name: vault-cert
              mountPath: /run/secrets/tls-int-srv-cert
              readOnly: true
            {{- end }}
            {{- if $etcdTls }}
            - name: ca-trusted-cert
              mountPath: /run/secrets/tls-ca-root-cert
              readOnly: true
            - name: vault-client-cert
              mountPath: "/run/secrets/tls-client-certs"
              readOnly: true
            {{- end }}
            - name: vault-config
              mountPath: /kms/etc/vault
              readOnly: true
            {{- if $logStream }}
            {{- include "eric-sec-key-management.logshipper-storage-path" . | indent 12 }}
            {{- end }}
        {{- if $shelter }}
        - name: "shelter"
          image: {{ include "eric-sec-key-management.shelterImagePath" . }}
          imagePullPolicy: {{ template "eric-sec-key-management.pullPolicy" . }}
          command: ["catatonit", "--"]
          {{- if $logStream }}
          args: ["/kms/stdout-redirect", "-logfile", "/logs/shelter.log", "-redirect", {{ include "eric-sec-key-management.log-redirect-param" . }}, "-run", "/kms/start.py"]
          {{- else }}
          args: ["/kms/start.py"]
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
                - all
          resources:
            limits:
              {{- include "eric-sec-key-management.shelter-resource-limits" . | nindent 14 }}
            requests:
              {{- include "eric-sec-key-management.shelter-resource-requests" . | nindent 14 }}
          env:
            # Vault process logging (3pp)
            - name: VAULT_LOG_LEVEL
              value: {{ .Values.logLevel | quote }}
            # Python script logging
            - name: LOG_LEVEL
              value: {{ .Values.logLevel | quote }}
            - name: SERVICE_NAME
              value: {{ template "eric-sec-key-management.name" . }}
            - name: AUTO_UNSEAL
              value: {{ .Values.unsealAutomatically | quote }}
            # Vault CLI settings
            - name: VAULT_ADDR
              value: "http://127.0.0.1:8212"
            {{- if $haEnabled }}
            # Vault storage configuration
            - name: ETCD_HA_ENABLED
              value: "true"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
              # The address that is advertised for client redirection
            - name: VAULT_API_ADDR
              {{- if $tlsEnabled }}
              value: "https://$(POD_NAME).{{ template "eric-sec-key-management.name" . }}-peer:8210"
              {{- else }}
              value: "http://$(POD_NAME).{{ template "eric-sec-key-management.name" . }}-peer:8210"
              {{- end }}
              # The address that is advertised for request forwarding
            - name: VAULT_CLUSTER_ADDR
              value: "https://$(POD_NAME).{{ template "eric-sec-key-management.name" . }}-peer:8211"
            {{- end }}
          {{- if $startupProbe }}
          startupProbe:
            httpGet:
              path: "/v1/sys/health?standbyok=true&activecode=204&standbycode=204&drsecondarycode=204&uninitcode=204&sealedcode=204"
              port: 8210
              {{- if $tlsEnabled }}
              scheme: HTTPS
              {{- end }}
            {{- include "eric-sec-key-management.shelter-startup" . | nindent 12 }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: "/v1/sys/health?standbyok=true&activecode=204&standbycode=204&drsecondarycode=204&uninitcode=204&sealedcode=204"
              port: 8210
              {{- if $tlsEnabled }}
              scheme: HTTPS
              {{- end }}
            {{- include "eric-sec-key-management.shelter-liveness" . | nindent 12 }}
          readinessProbe:
            exec:
              command: ["/kms/readiness_seal_check.bash", "{{ template "eric-sec-key-management.name" . }}-shelter-key", "8212"]
            {{- include "eric-sec-key-management.shelter-readiness" . | nindent 12 }}
          ports:
            - name: https-remote-s
              containerPort: 8210
            - name: https-cluster-s
              containerPort: 8211
            - name: http-local-s
              containerPort: 8212
          volumeMounts:
            - name: kms-shelter-tmp
              mountPath: "/tmp"
            - name: kms-shelter-run
              mountPath: "/kms/run"
            {{- if $pvc }}
            - name: vault-storage
              mountPath: /kms/data
            {{- end }}
            {{- if $tlsEnabled }}
            - name: vault-cert
              mountPath: /run/secrets/tls-int-srv-cert
              readOnly: true
            {{- end }}
            {{- if $etcdTls }}
            - name: ca-trusted-cert
              mountPath: /run/secrets/tls-ca-root-cert
              readOnly: true
            - name: vault-client-cert
              mountPath: "/run/secrets/tls-client-certs"
              readOnly: true
            {{- end }}
            - name: shelter-config
              mountPath: /kms/etc/vault
              readOnly: true
            {{- if $logStream }}
            {{- include "eric-sec-key-management.logshipper-storage-path" . | indent 12 }}
            {{- end }}
        {{- end }}
        {{- if $metrics }}
        - name: "eric-sec-key-management-metrics"
          image: {{ include "eric-sec-key-management.metricsExporterImagePath" . }}
          imagePullPolicy: {{ template "eric-sec-key-management.pullPolicy" . }}
          command: ["catatonit", "--"]
          {{- if $logStream }}
          args: ["/kms/stdout-redirect", "-logfile", "/logs/metrics.log", "-redirect", {{ include "eric-sec-key-management.log-redirect-param" . }}, "-run", "/kms/metrics-exporter"]
          {{- else }}
          args: ["/kms/metrics-exporter"]
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
                - all
          resources:
            limits:
              {{- include "eric-sec-key-management.metrics-exporter-resource-limits" . | nindent 14 }}
            requests:
              {{- include "eric-sec-key-management.metrics-exporter-resource-requests" . | nindent 14 }}
          env:
            - name: LOG_LEVEL
              value: {{ .Values.logLevel | quote }}
            - name: SERVICE_ID
              value: {{ template "eric-sec-key-management.name" . }}
            - name: SHELTER_ENABLED
              value: {{ if $shelter }}"true"{{ else }}"false"{{ end }}
            - name: TLS_ENABLED
              value: {{ if $tlsEnabled }}"true"{{ else }}"false"{{ end}}
            - name: METRICS_BIND_PORT
              value: "8888"
            - name: PROBE_BIND_PORT
              value: "8889"
            {{- if $tlsEnabled }}
            - name: SERVER_CERT_MOUNT_PATH
              value: /run/secrets/metrics-server-cert
            - name: CLIENT_CA_CERT_MOUNT_PATH
              value: /run/secrets/metrics-client-ca
            {{- end }}
          ports:
            # PM Server requires the name to end with -tls
            - name: http-pm-tls
              containerPort: 8888
            - name: http-probes
              containerPort: 8889
          livenessProbe:
            httpGet:
              path: "/liveness"
              port: http-probes
              {{- if $tlsEnabled }}
              scheme: HTTPS
              {{- end }}
            {{- include "eric-sec-key-management.metrics-liveness" . | nindent 12 }}
          readinessProbe:
            httpGet:
              path: "/readiness"
              port: http-probes
              {{- if $tlsEnabled }}
              scheme: HTTPS
              {{- end }}
            {{- include "eric-sec-key-management.metrics-readiness" . | nindent 12 }}
          volumeMounts:
            - name: kms-metrics-tmp
              mountPath: "/tmp"
            {{- if $tlsEnabled }}
            - name: vault-cert
              mountPath: /run/secrets/metrics-server-cert
              readOnly: true
            - name: metrics-client-ca
              mountPath: /run/secrets/metrics-client-ca
              readOnly: true
            {{- end }}
            {{- if $logStream }}
            {{- include "eric-sec-key-management.logshipper-storage-path" . | indent 12 }}
            {{- end }}
        {{- end }}
      {{- if $logStream }}
      {{- include "eric-sec-key-management.logshipper-container" . | indent 8 }}
       {{- end }}
      {{- if include "eric-sec-key-management.pullSecrets" . }}
      imagePullSecrets:
        - name: {{ template "eric-sec-key-management.pullSecrets" . }}
      {{- end }}
      volumes:
      - name: kms-metrics-tmp
        emptyDir:
          sizeLimit: "10Mi"
          medium: "Memory"
      - name: kms-mon-tmp
        emptyDir:
          sizeLimit: "10Mi"
          medium: "Memory"
      - name: kms-ca-tmp
        emptyDir:
          sizeLimit: "10Mi"
          medium: "Memory"
      - name: kms-shelter-tmp
        emptyDir:
          sizeLimit: "10Mi"
          medium: "Memory"
      - name: kms-tmp
        emptyDir:
          sizeLimit: "10Mi"
          medium: "Memory"
      - name: kms-mon-run
        emptyDir:
          sizeLimit: "10Mi"
          medium: "Memory"
      - name: kms-ca-run
        emptyDir:
          sizeLimit: "10Mi"
          medium: "Memory"
      - name: kms-shelter-run
        emptyDir:
          sizeLimit: "10Mi"
          medium: "Memory"
      - name: kms-run
        emptyDir:
          sizeLimit: "10Mi"
          medium: "Memory"
      - name: vault-config
        configMap:
          name: {{ template "eric-sec-key-management.configMapName" . }}
          items:
            - key: 'vault.json'
              path: 'vault.json'
      {{- if $shelter }}
      - name: shelter-config
        configMap:
          name: {{ template "eric-sec-key-management.configMapName" . }}
          items:
            - key: 'shelter.json'
              path: 'vault.json'
      {{- end }}
      - name: admin-sa-token
        secret:
          secretName: {{ template "eric-sec-key-management.name" . }}-admin
      - name: auth-sa-token
        secret:
          secretName: {{ template "eric-sec-key-management.name" . }}-auth-token
      {{- if $pvc }}
      - name: vault-storage
        persistentVolumeClaim:
          claimName: {{ template "eric-sec-key-management.name" . }}-pvc
      {{- end }}
      {{- if $tlsEnabled }}
      - name: vault-cert
        secret:
          secretName: {{ template "eric-sec-key-management.name" . }}-kms-cert
      {{- if $metrics }}
      - name: metrics-client-ca
        secret:
          optional: true
          secretName:  eric-pm-server-ca
      {{- end }}
      {{- end }}
      {{- if $etcdTls }}
      - name: ca-trusted-cert
        secret:
          optional: true
          secretName: {{ .Values.persistence.etcd.tls.trustedCaSecret | quote }}
      - name: etcd-root-client-certs
        secret:
          secretName: {{ .Values.persistence.etcd.serviceName }}-etcdctl-client-cert
      - name: vault-client-cert
        secret:
          secretName: {{ template "eric-sec-key-management.name" . }}-client-cert
      - name: bootstrap-ca
        secret:
          optional: true
          secretName: eric-sec-sip-tls-bootstrap-ca-cert
      {{- end }}
      {{- if $logStream }}
{{- include "eric-sec-key-management.logshipper-volume" . | indent 6 }}
      {{- end }}
      {{- if (or .Values.nodeSelector $globals.nodeSelector) }}
      nodeSelector: {{- include "eric-sec-key-management.nodeSelector" . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "eric-sec-key-management.name" . }}-auth
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if eq .Values.affinity.podAntiAffinity "hard" }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ template "eric-sec-key-management.name" . }}
            topologyKey: "kubernetes.io/hostname"
      {{- else if eq .Values.affinity.podAntiAffinity "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ template "eric-sec-key-management.name" . }}
              topologyKey: "kubernetes.io/hostname"
      {{- end }}
