# elasticsearchHosts: "https://eric-data-search-engine-tls:9200"
elasticsearchHosts: "http://eric-data-search-engine:9200"
replicas: 1

# Extra environment variables to append to this nodeGroup
# This will be appended to the current 'env:' key. You can use any of the kubernetes env
# syntax here
extraEnvs:
  - name: "NODE_OPTIONS"
    value: "--max-old-space-size=1800"
#  - name: 'KIBANA_ENCRYPTION_KEY'
#    valueFrom:
#      secretKeyRef:
#        name: eric-data-search-engine-http-client-cert-internal
#        key: cliprivkey.pem


image: "docker.elastic.co/kibana/kibana-oss"
imageTag: "7.10.2"
imagePullPolicy: "IfNotPresent"

# additionals labels
labels: {}

podAnnotations: {}
  # iam.amazonaws.com/role: es-cluster

resources:
  requests:
    cpu: "1000m"
    memory: "2Gi"
  limits:
    cpu: "1000m"
    memory: "2Gi"

# protocol: http

serverHost: "0.0.0.0"

healthCheckPath: "/app/kibana"

# Allows you to add any config files in /usr/share/kibana/config/
# such as kibana.yml
# kibanaConfig: {}
#   kibana.yml: |
#     key:
#       nestedkey: value

# If Pod Security Policy in use it may be required to specify security context as well as service account

podSecurityContext:
  fsGroup: 1000

securityContext:
  capabilities:
    drop:
    - ALL
  # readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

serviceAccount: ""

httpPort: 5601

updateStrategy:
  type: "Recreate"

service:
  type: ClusterIP
  loadBalancerIP: ""
  port: 5601
  nodePort: ""
  labels: {}
  annotations: {}
    # cloud.google.com/load-balancer-type: "Internal"
    # service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0
    # service.beta.kubernetes.io/azure-load-balancer-internal: "true"
    # service.beta.kubernetes.io/openstack-internal-load-balancer: "true"
    # service.beta.kubernetes.io/cce-load-balancer-internal-vpc: "true"
  loadBalancerSourceRanges: []
    # 0.0.0.0/0
  httpPortName: http

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

readinessProbe:
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 3
  timeoutSeconds: 5

imagePullSecrets: []
nodeSelector: {}
tolerations: []
affinity: {}

nameOverride: ""
fullnameOverride: ""

lifecycle: {}
  # preStop:
  #   exec:
  #     command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /usr/share/message"]
  # postStart:
  #   exec:
  #     command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /usr/share/message"]

# Deprecated - use only with versions < 6.6
elasticsearchURL: "" # "http:// eric-data-search-engine:9200"

#kibanaConfig:
#  kibana.yml: |
#    server.ssl:
#      enabled: false
#      key: /usr/share/kibana/config/certs/cliprivkey.pem
#      certificate: /usr/share/kibana/config/certs/clicert.pem
#    elasticsearch.ssl:
#      key: /usr/share/kibana/config/certs/cliprivkey.pem
#      certificate: /usr/share/kibana/config/certs/clicert.pem
#      certificateAuthorities: /usr/share/kibana/config/cacerts/ca.crt
#      verificationMode: certificate
#    xpack.infra.enabled: false
#    xpack.logstash.enabled: false
#    xpack.canvas.enabled: false

protocol: http
#protocol: https

#secretMounts:
#  - name: elastic-certificate-pem
#    secretName: eric-data-search-engine-http-client-cert-internal
#    path: /usr/share/kibana/config/certs
#  - name: elastic-ca-certificate-pem
#    secretName: eric-sec-sip-tls-trusted-root-cert
#    path: /usr/share/kibana/config/cacerts
