affinity: {}
ahSnmpTrapsConfigMap: |
  {"trapTargets": [{"address":"10.100.110.10","community":"public"}]}
credentials:
  alarm:
    db:
      pwd: pgpwd
      user: pguser
  cm:
    db:
      pwd: pgpwd
      user: pguser
  dced:
    password: password
  iam:
    db:
      pwd: pgpwd
      user: pguser
    kcadminid: admin
    kcpasswd: password
  nels:
    db:
      pwd: lmpwd
      user: lmuser
  notification:
    db:
      pwd: pgpwd
      user: pguser
eric-bss-kafka-proxy:
  enabled: false
eric-bss-notification-service-database-pg:
  affinity:
    podAntiAffinity: soft
  brAgent:
    enabled: true
    logLevel: info
    logicalDBBackupEnable: false
  credentials:
    keyForUserId: notificationUKey
    keyForUserPw: notificationPKey
    kubernetesSecretName: eric-data-document-database-pg-credentials
  enabled: false
  highAvailability:
    replicaCount: 2
    synchronousModeEnabled: true
  imageCredentials:
    pullPolicy: IfNotPresent
  metrics:
    enabled: true
    logLevel: info
    service:
      port: 9187
  nameOverride: eric-bss-notification-service-database-pg
  nodeSelector: {}
  patroni:
    logLevel: INFO
  persistentVolumeClaim:
    enabled: true
    size: 8Gi
    storageClassName: local-storage
  postgresDatabase: bss-notification-service
  resources:
    bra:
      limits:
        cpu: "1"
        ephemeral-storage: 12Gi
        memory: 2Gi
      requests:
        cpu: 500m
        ephemeral-storage: 10Gi
        memory: 1Gi
    brm:
      limits:
        cpu: "1"
        memory: 512Mi
      requests:
        cpu: 300m
        memory: 256Mi
    kube_client:
      limits:
        cpu: 200m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 256Mi
    logshipper:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 50Mi
    metrics:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi
    postgres:
      limits:
        cpu: "1"
        hugepages-1Gi: null
        hugepages-2Mi: null
        memory: 2560Mi
      requests:
        cpu: 100m
        hugepages-1Gi: null
        hugepages-2Mi: null
        memory: 256Mi
  security:
    postgres:
      tls:
        enable: true
    tls:
      brAgent:
        enabled: true
  service:
    endpoints:
      postgres:
        tls:
          enforced: optional
      postgresExporter:
        tls:
          enforced: optional
  tolerations: []
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
eric-cm-database-pg:
  affinity:
    podAntiAffinity: soft
  brAgent:
    backupTypeList:
    - configuration-data
    enabled: true
    logLevel: info
    logicalDBBackupEnable: false
  credentials:
    keyForUserId: cmmUKey
    keyForUserPw: cmmPKey
    kubernetesSecretName: eric-data-document-database-pg-credentials
  enabled: false
  highAvailability:
    replicaCount: 2
    synchronousModeEnabled: true
  imageCredentials:
    pullPolicy: IfNotPresent
  metrics:
    enabled: true
    logLevel: info
    service:
      port: 9187
  nameOverride: eric-data-document-database-pg
  nodeSelector: {}
  patroni:
    logLevel: INFO
  persistentVolumeClaim:
    enabled: true
    size: 2Gi
    storageClassName: local-storage
  postgresDatabase: adp_gs_cm
  resources:
    bra:
      limits:
        cpu: "1"
        ephemeral-storage: 12Gi
        memory: 2Gi
      requests:
        cpu: 500m
        ephemeral-storage: 10Gi
        memory: 1Gi
    brm:
      limits:
        cpu: "1"
        memory: 512Mi
      requests:
        cpu: 300m
        memory: 256Mi
    kube_client:
      limits:
        cpu: 200m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 256Mi
    logshipper:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 50Mi
    metrics:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi
    postgres:
      limits:
        cpu: "1"
        hugepages-1Gi: null
        hugepages-2Mi: null
        memory: 2560Mi
      requests:
        cpu: 100m
        hugepages-1Gi: null
        hugepages-2Mi: null
        memory: 256Mi
  security:
    postgres:
      tls:
        enable: true
  service:
    endpoints:
      postgres:
        tls:
          enforced: required
      postgresExporter:
        tls:
          enforced: optional
  tolerations: []
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
eric-cm-mediator:
  backend:
    dbname: adp_gs_cm
    hostname: eric-data-document-database-pg
    type: postgres
  cmkey:
    enable: false
  cmm:
    accessLogging: false
    debug: false
    gunicornAccessLogLevel: Info
    gunicornLogLevel: Info
    kafkaLogLevel: Info
    logFormat: adpjson
    logLevel: Info
  credentials:
    keyForUserId: cmmUKey
    keyForUserPw: cmmPKey
    kubernetesSecretName: eric-data-document-database-pg-credentials
  enabled: false
  global:
    security:
      tls:
        enabled: true
  imageCredentials:
    pullPolicy: IfNotPresent
  kafka:
    hostname: eric-data-message-bus-kf-client
  replicaCount: 2
  resources:
    eric-cm-mediator:
      limits:
        cpu: 2000m
        memory: 512Mi
      requests:
        cpu: 500m
        memory: 256Mi
  service:
    endpoints:
      restapi:
        tls:
          enforced: optional
          verifyClientCertificate: optional
  updateStrategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
    type: RollingUpdate
eric-cm-mediator-rbac-proxy:
  config:
    certAuth:
      clientCaSecret: null
      enabled: false
    oidcAuth:
      caSecret: eric-sec-sip-tls-trusted-root-cert
      clientId: AuthorizationClient
      enabled: true
      groupsClaim: groups
      issuerUrl: https://eric-sec-access-mgmt/auth/realms/master
      usernameClaim: email
    upstream:
      caSecret: eric-sec-sip-tls-trusted-root-cert
      url: https://eric-cm-mediator:5004
    verbose: false
  enabled: false
  ingress:
    enabled: true
    fqdn: null
  nameOverride: eric-cm-mediator-rbac-proxy
eric-ctrl-bro:
  bro:
    enableNotifications: true
  enabled: false
  kafka:
    hostname: eric-data-message-bus-kf-client
    port: 9092
  persistence:
    persistentVolumeClaim:
      size: 5Gi
      storageClassName: local-storage
  resources:
    backupAndRestore:
      limits:
        cpu: "2"
        ephemeral-storage: 250Mi
        memory: 4Gi
      requests:
        cpu: "1"
        ephemeral-storage: 100Mi
        memory: 2Gi
  security:
    tls:
      broToAgent:
        enabled: true
      rest:
        enabled: false
  service:
    endpoints:
      broToAgent:
        tls:
          verifyClientCertificate: optional
      cmmHttpNotif:
        tls:
          verifyClientCertificate: optional
      restActions:
        tls:
          verifyClientCertificate: optional
      scrape:
        pm:
          tls:
            verifyClientCertificate: optional
eric-data-coordinator-zk:
  enabled: false
  heap: 256M
  imagePullPolicy: IfNotPresent
  livenessProbeInitialDelaySeconds: 75
  livenessProbeTimeoutSeconds: 75
  logLevel: INFO
  minAvailable: 55%
  persistence:
    persistentVolumeClaim:
      size: 5Gi
      storageClassName: local-storage
  replicas: 3
  resources:
    brAgent:
      limits:
        cpu: "1"
        memory: 2Gi
      requests:
        cpu: "1"
        memory: 1Gi
    datacoordinatorzk:
      limits:
        cpu: "2"
        memory: 4Gi
      requests:
        cpu: "1"
        memory: 2Gi
    logshipper:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 50Mi
    metricsexporter:
      limits:
        cpu: 200m
        memory: 32Mi
      requests:
        cpu: 100m
        memory: 8Mi
  security:
    tls:
      agentToBro:
        enabled: true
  updateStrategy:
    type: RollingUpdate
eric-data-distributed-coordinator-ed:
  brAgent:
    properties:
      applicationProperties: |-
        dced.agent.restore.type=overwrite
        dced.excluded.paths=/shelter,/kms/core/lock
  enabled: true
  imagePullPolicy: IfNotPresent
  persistence:
    persistentVolumeClaim:
      size: 1Gi
      storageClassName: local-storage
  pods:
    dced:
      replicas: 3
  resources:
    brAgent:
      limits:
        cpu: "1"
        memory: 2Gi
      requests:
        cpu: 400m
        memory: 400Mi
    dced:
      limits:
        cpu: "1"
        memory: 1Gi
      requests:
        cpu: 400m
        memory: 400Mi
    init:
      limits:
        cpu: 500m
        memory: 500Mi
      requests:
        cpu: 200m
        memory: 200Mi
    logshipper:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 50Mi
    metricsexporter:
      limits:
        cpu: 200m
        memory: 32Mi
      requests:
        cpu: 100m
        memory: 8Mi
  security:
    etcd:
      certificates:
        enabled: true
  updateStrategy:
    type: RollingUpdate
eric-data-message-bus-kf:
  configurationOverrides:
    file.delete.delay.ms: "10000"
    log.cleaner.delete.retention.ms: "1000"
    log.cleaner.threads: "5"
    log.retention.bytes: "1073741824"
    log.retention.check.interval.ms: "30000"
    log.segment.bytes: "65536000"
    log.segment.delete.delay.ms: "1000"
  enabled: false
  imagePullPolicy: IfNotPresent
  persistence:
    persistentVolumeClaim:
      enabled: true
      size: 5Gi
      storageClassName: local-storage
  readynessProbeTimeoutSeconds: 10
  replicas: 3
  security:
    tls:
      messagebuskf:
        provider: sip-tls
  service:
    endpoints:
      dataCoordinator:
        tls:
          clientRenewalLeadTime: 4800
          clientTimeToLive: 604800
          enforced: required
      messagebuskf:
        sasl:
          enforced: optional
        tls:
          enforced: optional
          servcertRenewalLeadTime: 4800
          servcertTimeToLive: 604800
          verifyClientCertificate: optional
  updateStrategy:
    type: RollingUpdate
eric-data-object-storage-mn:
  autoEncryption:
    enabled: true
    kmsConfigSecret: eric-data-object-storage-mn-kms-set
  clusterDomain: cluster.local
  credentials:
    accesskey: TESTPKEY
    kubernetesSecretName: object-storage-secret
    secretkey: TESTPKEY
  enabled: false
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: 20m
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "180"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "180"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "180"
      nginx.ingress.kubernetes.io/rewrite-target: /$1
      nginx.ingress.kubernetes.io/upstream-vhost: eric-data-object-storage-mn:9000
    enabled: true
    hosts:
    - host: ingress-nginx
      paths:
      - /
    tls:
    - hosts:
      - ingress-nginx
      secretName: extingresscerts
  mode: distributed
  mountPath: /export
  persistentVolumeClaim:
    size: 10Gi
    storageClassName: local-storage
    storageConnectivity: local
    subPath: ""
    volumeNamePrefix: export
  priorityClassName: ""
  replicas: 4
  tls:
    caCert: cacertbundle.pem
    caSecret: eric-sec-sip-tls-trusted-root-cert
    certSecret: ""
    privateKey: private.key
    publicCrt: public.crt
eric-data-search-engine:
  autoSetRequiredWorkerNodeSysctl: true
  enabled: false
  imageCredentials:
    pullPolicy: IfNotPresent
  jvmHeap:
    data: 1024m
    ingest: 512m
    master: 512m
  metrics:
    enabled: true
  persistence:
    backup:
      persistentVolumeClaim:
        size: 1Gi
        storageClassName: local-storage
    data:
      persistentVolumeClaim:
        size: 1Gi
        storageClassName: local-storage
    master:
      persistentVolumeClaim:
        size: 64Mi
        storageClassName: local-storage
  replicaCount:
    data: 2
    ingest: 1
    master: 3
  resources:
    bragent:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 1Gi
    chmod:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 25m
        memory: 64Mi
    data:
      limits:
        cpu: 500m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 2Gi
    ingest:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 1Gi
    logshipper:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 50Mi
    master:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 1Gi
    metrics:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 25m
        memory: 64Mi
    preupgradehook:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 25m
        memory: 64Mi
    sysctl:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 25m
        memory: 64Mi
    tlsproxy:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 25m
        memory: 64Mi
  service:
    endpoints:
      internode:
        tls:
          verifyClientHostname: false
      rest:
        tls:
          enforced: required
          verifyClientCertificate: optional
          verifyClientHostname: false
    name: eric-data-search-engine
    network:
      protocol:
        IPv6: false
  updateStrategy:
    bragent:
      type: RollingUpdate
    data:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    ingest:
      rollingUpdate:
        maxSurge: 2
        maxUnavailable: 0
      type: RollingUpdate
    master:
      rollingUpdate:
        maxSurge: 4
        maxUnavailable: 1
      type: RollingUpdate
eric-data-search-engine-curator:
  actions: |
    1:
      action: delete_indices
      description: Remove logs older than 5 days
      options:
        disable_action: false
        ignore_empty_list: true
      filters:
      - filtertype: age
        source: name
        direction: older
        timestring: '%Y.%m.%d'
        unit: days
        unit_count: 5
  cronjob:
    curator:
      enabled: true
      failedJobHistoryLimit: 3
      schedule: 0 1 * * *
      successfulJobHistoryLimit: 1
  enabled: false
eric-data-search-engine-rbac-proxy:
  config:
    certAuth:
      clientCaSecret: null
      enabled: false
    oidcAuth:
      caSecret: eric-sec-sip-tls-trusted-root-cert
      clientId: AuthorizationClient
      enabled: true
      groupsClaim: groups
      issuerUrl: https://eric-sec-access-mgmt/auth/realms/master
      usernameClaim: email
    upstream:
      caSecret: null
      url: http://eric-data-search-engine:9200
    verbose: false
  enabled: false
  ingress:
    enabled: true
    fqdn: null
  nameOverride: eric-data-search-engine-rbac-proxy
eric-fh-alarm-handler:
  alarmhandler:
    configmap:
      faultmappings: eric-fh-alarm-handler-faultmappings
    debug: false
    logFormat: adpjson
  backend:
    dbname: adp_gs_ah
    dbuser: ah
    hostname: eric-fm-database-pg
    port: 5432
    type: postgres
  cmm:
    hostname: eric-cm-mediator
  credentials:
    keyForUserId: ahUKey
    keyForUserPw: ahPKey
    kubernetesSecretName: eric-data-document-database-pg-credentials
  dataCoordinator:
    hostname: eric-data-coordinator-zk
  enabled: false
  global:
    security:
      tls:
        enabled: true
  kafka:
    hostname: eric-data-message-bus-kf-client
  redis:
    hostname: eric-data-key-value-database-rd-operand
  replicaCount: 1
  resources:
    alarmhandler:
      limits:
        cpu: 1000m
        ephemeral-storage: 4Gi
        memory: 512Mi
      requests:
        cpu: 500m
        ephemeral-storage: 2Gi
        memory: 384Mi
    ericsecoauthproxy:
      limits:
        cpu: 50m
        memory: 150Mi
      requests:
        cpu: 10m
        memory: 30Mi
    ericsecoauthsap:
      limits:
        cpu: 50m
        memory: 150Mi
      requests:
        cpu: 10m
        memory: 30Mi
    logshipper:
      disableProbes: false
      limits:
        cpu: 50m
        memory: 100Mi
      requests:
        cpu: 20m
        memory: 50Mi
    topiccreator:
      limits:
        cpu: 1000m
        ephemeral-storage: 2Gi
        memory: 512Mi
      requests:
        cpu: 500m
        ephemeral-storage: 1Gi
        memory: 384Mi
  updateStrategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
    type: RollingUpdate
eric-fh-alarm-handler-rbac-proxy:
  config:
    certAuth:
      clientCaSecret: null
      enabled: false
    oidcAuth:
      caSecret: eric-sec-sip-tls-trusted-root-cert
      clientId: AuthorizationClient
      enabled: true
      groupsClaim: groups
      issuerUrl: https://eric-sec-access-mgmt/auth/realms/master
      usernameClaim: email
    upstream:
      caSecret: null
      url: http://eric-fh-alarm-handler:5005
    verbose: false
  enabled: false
  ingress:
    enabled: true
    fqdn: null
  nameOverride: eric-fh-alarm-handler-rbac-proxy
eric-fh-snmp-alarm-provider:
  ah:
    caName: eric-fh-alarm-handler-ca
    clientCertSecret: eric-sec-snmp-ap-ah-cert
  enabled: false
  imageCredentials:
    pullPolicy: IfNotPresent
  ingress:
    enabled: true
    hostname: eric-fh-snmp-alarm-provider
    snmpAgentPort: 161
    tls:
      passthrough: false
  messageBusKF:
    caName: eric-data-message-bus-kf-client-client-ca
    clientCertSecret: eric-sec-snmp-ap-message-bus-kf-cert
  resources:
    alarmprovider:
      limits:
        cpu: "0.2"
        ephemeral-storage: 4Gi
        memory: 1.5Gi
      requests:
        cpu: "0.1"
        ephemeral-storage: 2Gi
        memory: 384Mi
    logshipper:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 50Mi
    vip:
      limits:
        cpu: 40m
        ephemeral-storage: 200Mi
        memory: 50Mi
      requests:
        cpu: 25m
        ephemeral-storage: 100Mi
        memory: 30Mi
  service:
    replicas: 1
    secretName: eric-bss-ecmeoc-common-alarm-provider
    snmpAgentPort: 1161
eric-fm-database-pg:
  affinity:
    podAntiAffinity: soft
  credentials:
    keyForUserId: ahUKey
    keyForUserPw: ahPKey
    kubernetesSecretName: eric-data-document-database-pg-credentials
  enabled: false
  highAvailability:
    replicaCount: 2
    synchronousModeEnabled: true
  imageCredentials:
    pullPolicy: IfNotPresent
  metrics:
    enabled: true
    logLevel: info
    service:
      port: 9187
  nameOverride: eric-fm-database-pg
  nodeSelector: {}
  patroni:
    logLevel: INFO
  persistentVolumeClaim:
    enabled: true
    size: 2Gi
    storageClassName: local-storage
  postgresDatabase: adp_gs_ah
  resources:
    bra:
      limits:
        cpu: "1"
        ephemeral-storage: 12Gi
        memory: 2Gi
      requests:
        cpu: 500m
        ephemeral-storage: 10Gi
        memory: 1Gi
    brm:
      limits:
        cpu: "1"
        memory: 512Mi
      requests:
        cpu: 300m
        memory: 256Mi
    kube_client:
      limits:
        cpu: 200m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 256Mi
    logshipper:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 50Mi
    metrics:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi
    postgres:
      limits:
        cpu: "1"
        hugepages-1Gi: null
        hugepages-2Mi: null
        memory: 2560Mi
      requests:
        cpu: 100m
        hugepages-1Gi: null
        hugepages-2Mi: null
        memory: 256Mi
  security:
    postgres:
      tls:
        enable: true
  service:
    endpoints:
      postgres:
        tls:
          enforced: required
      postgresExporter:
        tls:
          enforced: optional
  tolerations: []
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
eric-idam-database-pg:
  affinity:
    podAntiAffinity: soft
  brAgent:
    backupTypeList:
    - idam-data
    enabled: true
    logLevel: info
    logicalDBBackupEnable: false
  credentials:
    keyForUserId: amUKey
    keyForUserPw: amPKey
    kubernetesSecretName: eric-data-document-database-pg-credentials
  enabled: true
  highAvailability:
    replicaCount: 2
    synchronousModeEnabled: true
  imageCredentials:
    pullPolicy: IfNotPresent
  metrics:
    enabled: true
    logLevel: info
    service:
      port: 9187
  nameOverride: eric-idam-database-pg
  nodeSelector: {}
  patroni:
    logLevel: INFO
  persistentVolumeClaim:
    enabled: true
    size: 2Gi
    storageClassName: local-storage
  postgresDatabase: idam
  resources:
    bra:
      limits:
        cpu: "1"
        ephemeral-storage: 12Gi
        memory: 2Gi
      requests:
        cpu: 500m
        ephemeral-storage: 10Gi
        memory: 1Gi
    brm:
      limits:
        cpu: "1"
        memory: 512Mi
      requests:
        cpu: 300m
        memory: 256Mi
    kube_client:
      limits:
        cpu: 200m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 256Mi
    logshipper:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 50Mi
    metrics:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi
    postgres:
      limits:
        cpu: "1"
        hugepages-1Gi: null
        hugepages-2Mi: null
        memory: 2560Mi
      requests:
        cpu: 100m
        hugepages-1Gi: null
        hugepages-2Mi: null
        memory: 256Mi
  security:
    postgres:
      tls:
        enable: true
    tls:
      brAgent:
        enabled: true
  service:
    endpoints:
      postgres:
        tls:
          enforced: required
      postgresExporter:
        tls:
          enforced: optional
  tolerations: []
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
eric-lcm-container-registry:
  enabled: false
  registry:
    users:
      secret: eric-lcm-container-registry
eric-lcm-helm-chart-registry:
  enabled: false
eric-lm-combined-server:
  database:
    credentials:
      passwordKey: nelsPKey
      secretName: eric-data-document-database-pg-credentials
      userKey: nelsUKey
    host: eric-nels-database-pg
  enabled: true
  global:
    ericsson:
      licensing:
        licenseDomains:
        - customerId: 800141
          productType: CATALOG_MANAGER
          swltId: STB-CATALOG_MANAGER-1
        - customerId: 800141
          productType: ORDER_CARE
          swltId: STB-ORDER_CARE-1
  imageCredentials:
    pullSecret: scmcred
  licenseServerClient:
    licenseServer:
      thrift:
        host: 10.221.14.90
  nameOverride: eric-lm-combined-server
  tls:
    lch:
      certTtl: 15778800
eric-log-shipper:
  additionalVolumeMounts: |
    - name: docker-containers
      mountPath: /var/lib/docker/containers
      readOnly: true
    - name: kubernetes-containers
      mountPath: /var/log
      readOnly: true
  additionalVolumes: |
    - name: docker-containers
      hostPath:
        path: /var/lib/docker/containers
    - name: kubernetes-containers
      hostPath:
        path: /var/log
  enabled: false
  logLevel: error
  logshipper:
    autodiscover:
      enabled: true
      exclusions:
      - field: kubernets.labels.app.kubernetes.io/name
        value: eric-log-shipper
      hints:
        enabled: false
      inclusions: null
      json:
        enabled: true
        target: json
      logplane: kubelog
      namespace: .RELEASE.NAMESPACE
      templates:
      - condition:
          equals:
            kubernetes.container.runtime: containerd
        config:
        - paths:
          - /var/log/pods/*_${data.kubernetes.pod.uid}/${data.kubernetes.container.name}/*.log
          type: log
      - condition.contains:
          kubernetes.container.image: wildfly
        config:
        - fields:
            facility: log audit
          paths:
          - /var/log/*/*/security/${data.kubernetes.pod.name}/*AuditTrail.log
          type: log
      - condition.or:
        - contains:
            kubernetes.container.image: shoppingcart
        - contains:
            kubernetes.container.image: pobrowsing
        - contains:
            kubernetes.container.image: jxc
        - contains:
            kubernetes.container.image: technicalbrowsing
        - contains:
            kubernetes.container.image: som
        - contains:
            kubernetes.container.image: process-controller
        - contains:
            kubernetes.container.image: plm
        config:
        - fields:
            facility: log audit
          paths:
          - /var/log/*/*/security/${data.kubernetes.pod.name}/*security.log
          type: log
    cfgData: ""
    harvester:
      closeTimeout: "0"
      logData:
      - format: json
  rbac:
    automountServiceAccountToken: true
    createClusterRole: false
    createClusterRoleBinding: false
  resources:
    logshipper:
      limits:
        cpu: 250m
        memory: 500Mi
      requests:
        cpu: 100m
        memory: 100Mi
  security:
    tls:
      logtransformer:
        enabled: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 25%
    type: RollingUpdate
eric-log-transformer:
  config:
    adpJson:
      decodedAdpJsonField: json
      transformation:
        enabled: true
      validation:
        enabled: false
    fileOutput: false
    filebeat:
      input:
        beats:
          client_inactivity_timeout: 120
    filter: |
      if [type] == "filebeat" {
        json {
          source => "message"
        }
        # cassandra
        grok {
          match => { "log" => "%{WORD:logType}\s\s\[%{NOTSPACE:thread}\]\s%{TIMESTAMP_ISO8601:logDate}\s%{NOTSPACE:service}\s\-\s%{GREEDYDATA:msgBody}" }
        }
        # CPR Application
        grok {
          match => { "log" => "%{TIMESTAMP_ISO8601:logDate}\s\[%{WORD:logType}?\]\s\[%{WORD:logLevel}?\]\s\[%{NOTSPACE:hostName}?\]\s\[%{NOTSPACE:applicationName}\]\s\[%{NOTSPACE:executionId}?\]\s\[%{NOTSPACE:correlationId}?\]\s\s\[%{NOTSPACE:thread}?\]\s\[%{GREEDYDATA:className}?\]\s%{GREEDYDATA:msgBody}" }
        }
        # Application-Audit-log
        grok {
          match => { "log" => "%{TIMESTAMP_ISO8601:logDate}\s\[%{WORD:logType}?\]\s\[%{WORD:logLevel}?\]\s\[%{NOTSPACE:hostName}?\]\s\[%{NOTSPACE:applicationName}\]\s\[%{NOTSPACE:executionId}?\]\s\[%{NOTSPACE:correlationId}?\]\s\[%{NOTSPACE:partyid}?\]\s\[%{NOTSPACE:userrole}?\]\s\s\[%{NOTSPACE:thread}?\]\s\[%{GREEDYDATA:className}?\]\s%{GREEDYDATA:msgBody}" }
        }
        # camunda
        grok {
          match => { "log" => "%{TIMESTAMP_ISO8601:logDate}\s%{WORD:logType}?\s\s\s\s\[%{WORD:thread}?\]\s\[%{NOTSPACE:applicationName}?\]\s%{GREEDYDATA:msgBody}" }
        }
        # cm-mediator
        grok {
          match => { "log" => "%{TIMESTAMP_ISO8601:logDate}\s%{NOTSPACE:hostName}\s%{WORD:logType}\s%{GREEDYDATA:msgBody}" }
        }
        # PG
        grok {
          match => { "log" => "%{TIMESTAMP_ISO8601:logDate}.*\:\s\s%{GREEDYDATA:msgBody}" }
        }
        # Wildfly Application
        grok {
          match => { "log" => "%{TIMESTAMP_ISO8601:logDate}\s%{WORD:logLevel}?\s\[%{NOTSPACE:thread}\]\s\(%{GREEDYDATA:className}?\)\s%{GREEDYDATA:msgBody}" }
        }
        # ECM/EOC Application
        grok {
          match => { "log" => "%{TIMESTAMP_ISO8601:logDate}\s%{WORD:logLevel}?\s\[%{WORD:logType}\]?\s\(%{NOTSPACE:className}\)\s%{TIMESTAMP_ISO8601:logDate}\s\[%{GREEDYDATA:thread}?\]\s%{GREEDYDATA:msgBody}" }
        }
        # OSGi Application 1
        grok {
          match => { "log" => "%{TIMESTAMP_ISO8601:logDate}\s?\s%{WORD:logLevel}\s?\s%{GREEDYDATA:thread}\s?\s%{NOTSPACE:applicaionName}\s?\s%{NOTSPACE:class}\s%{NOTSPACE:classid}\s?\s%{NOTSPACE:bundleid}\s?\s%{NOTSPACE:bundlename}\s?\s%{NOTSPACE:bundleversion}\s?\s%{GREEDYDATA:msgBody}" }
        }
        # OSGI Security Logs
        grok {
          match => { "log" => "%{WORD:contextName}\s?\s%{TIMESTAMP_ISO8601:logDate}\s?\s%{WORD:logLevel}\s?\s%{GREEDYDATA:thread}\s?\s%{NOTSPACE:class}\s%{NOTSPACE:classid}\s?\s%{GREEDYDATA:msgBody}" }
        }
      }
    input: null
    output: null
  enabled: false
  imageCredentials:
    pullPolicy: IfNotPresent
  jvmHeap: 4096m
  logLevel: error
  metrics:
    enabled: true
    httpPort: 9114
  replicaCount: 1
  resources:
    logshipper:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 50Mi
    logtransformer:
      limits:
        cpu: 1000m
        memory: 6Gi
      requests:
        cpu: 250m
        memory: 6Gi
    metrics:
      limits:
        cpu: 100m
        memory: 256Mi
      requests:
        cpu: 25m
        memory: 64Mi
    tlsproxy:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 25m
        memory: 64Mi
  searchengine:
    exclusion:
    - logplane: null
      rules:
      - field: null
        value: null
    host: eric-data-search-engine
    logplaneConfig:
    - field: '[extra_data][asi][log_plane]'
      newLogplane: adp-app-asi-logs
      value: alarm
    - field: '[facility]'
      newLogplane: adp-app-audit-logs
      value: log audit
    - contains: -privacy-
      field: '[metadata][category]'
      newLogplane: adp-app-audit-logs
  security:
    tls:
      logshipper:
        enabled: true
  updateStrategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
eric-nels-database-pg:
  affinity:
    podAntiAffinity: soft
  credentials:
    keyForUserId: nelsUKey
    keyForUserPw: nelsPKey
    kubernetesSecretName: eric-data-document-database-pg-credentials
  enabled: true
  highAvailability:
    replicaCount: 1
    synchronousModeEnabled: true
  imageCredentials:
    pullPolicy: IfNotPresent
  metrics:
    enabled: true
    logLevel: info
    service:
      port: 9187
  nameOverride: eric-nels-database-pg
  nodeSelector: {}
  patroni:
    logLevel: INFO
  persistentVolumeClaim:
    enabled: true
    size: 8Gi
    storageClassName: local-storage
  postgresDatabase: licensemanager_db
  resources:
    bra:
      limits:
        cpu: "1"
        ephemeral-storage: 12Gi
        memory: 2Gi
      requests:
        cpu: 500m
        ephemeral-storage: 10Gi
        memory: 1Gi
    brm:
      limits:
        cpu: "1"
        memory: 512Mi
      requests:
        cpu: 300m
        memory: 256Mi
    kube_client:
      limits:
        cpu: 200m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 256Mi
    logshipper:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 50Mi
    metrics:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi
    postgres:
      limits:
        cpu: "1"
        hugepages-1Gi: null
        hugepages-2Mi: null
        memory: 2560Mi
      requests:
        cpu: 100m
        hugepages-1Gi: null
        hugepages-2Mi: null
        memory: 256Mi
  security:
    postgres:
      tls:
        enable: true
  service:
    endpoints:
      postgres:
        tls:
          enforced: required
      postgresExporter:
        tls:
          enforced: optional
  tolerations: []
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
eric-pm-bulk-reporter:
  enabled: false
  resources:
    alarmreporter:
      limits:
        cpu: "1"
        ephemeral-storage: 500Mi
        memory: 200Mi
      requests:
        cpu: 100m
        ephemeral-storage: 50Mi
        memory: 50Mi
    bulkreporter:
      limits:
        cpu: "1"
        ephemeral-storage: 500Mi
        memory: 200Mi
      requests:
        cpu: 100m
        ephemeral-storage: 50Mi
        memory: 50Mi
    initcontainer:
      limits:
        cpu: "1"
        memory: 200Mi
      requests:
        cpu: 50m
        memory: 50Mi
    logshipper:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 50Mi
    pmsftp:
      limits:
        cpu: "1"
        ephemeral-storage: 500Mi
        memory: 200Mi
      requests:
        cpu: 50m
        ephemeral-storage: 50Mi
        memory: 50Mi
  thresholdReporter:
    enabled: false
    kafkahost: eric-data-message-bus-kf:9093
    thresholdGps: ten-seconds thirty-seconds one-min five-min fifteen-min thirty-min
      one-hour twelve-hour one-day
  userConfig:
    secretKey: users.yaml
    secretName: pm-br-sftp-users-secret
  yangModelSupport:
    enabled: false
eric-pm-server:
  enabled: false
  rbac:
    appMonitoring:
      configFileCreate: false
      enabled: true
  resources:
    eric-pm-configmap-reload:
      limits:
        cpu: 200m
        memory: 32Mi
      requests:
        cpu: 100m
        memory: 8Mi
    eric-pm-exporter:
      limits:
        cpu: 200m
        memory: 32Mi
      requests:
        cpu: 100m
        memory: 8Mi
    eric-pm-reverseproxy:
      limits:
        cpu: "2"
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 32Mi
    eric-pm-server:
      limits:
        cpu: "2"
        memory: 2048Mi
      requests:
        cpu: 250m
        memory: 512Mi
    logshipper:
      limits:
        cpu: 100m
        memory: 50Mi
      requests:
        cpu: 50m
        memory: 25Mi
  server:
    persistentVolume:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      enabled: true
      mountPath: /data
      retention: 15d
      size: 8Gi
      storageConnectivity: networked
      subPath: ""
    serviceAccountName: eric-pm-server
  serverFiles:
    kafkaMetrics-rules.yml: |
      groups:
        - name: kafkaMetrics
          rules:
            - record: kafka_cpu_usages
              expr: sum(rate(container_cpu_usage_seconds_total{name=~".*message-bus-kf.*", image!="", container!="POD"}[10m])) by (pod, container) / sum(container_spec_cpu_quota{name=~".*message-bus-kf.*", image!="", container!="POD"}/container_spec_cpu_period{name=~".*message-bus-kf.*", image!="", container!="POD"}) by (pod, container)
            - record: kafka_memory_usage
              expr: rate(java_lang_OperatingSystem_FreePhysicalMemorySize{kubernetes_pod_name=~".*message-bus-kf.*"}[5m]) / java_lang_OperatingSystem_TotalPhysicalMemorySize{kubernetes_pod_name=~".*message-bus-kf.*"}
            - record: kafka_disk_usage
              expr: (kubelet_volume_stats_capacity_bytes {persistentvolumeclaim=~".*message-bus-kf.*"} - kubelet_volume_stats_available_bytes{persistentvolumeclaim=~".*message-bus-kf.*"}) / kubelet_volume_stats_capacity_bytes {persistentvolumeclaim=~".*message-bus-kf.*"} * 100
            - record: kafka_produce_processing_time
              expr: max(kafka_network_RequestMetrics_99thPercentile{name="TotalTimeMs", request="Produce"})
            - record: kafka_fetch_processing_time
              expr: max(kafka_network_RequestMetrics_99thPercentile{name="TotalTimeMs", request="Fetch"})
            - record: kafka_fetchConsumer_processing_time
              expr: max(kafka_network_RequestMetrics_99thPercentile{name="TotalTimeMs", request="FetchConsumer"})
            - record: kafka_failure_request_count
              expr: sum(kafka_network_RequestMetrics_Count{name="ErrorsPerSec",error!="NONE"})
            - record: kafka_produce_purgatory_size
              expr: Max(kafka_server_DelayedOperationPurgatory_Value{name="PurgatorySize",delayedOperation="Produce"})
            - record: kafka_fetch_purgatory_size
              expr: Max(kafka_server_DelayedOperationPurgatory_Value{name="PurgatorySize",delayedOperation="Fetch"})
            - record: kafka_replicated_partition_size
              expr: sum(kafka_server_ReplicaManager_Value{name="UnderReplicatedPartitions"})
            - record: kafka_partition_without_leader
              expr: sum(kafka_controller_KafkaController_Value{name="OfflinePartitionsCount"})
            - record: kafka_leader_election_rate
              expr: sum(kafka_controller_ControllerStats_50thPercentile{name="LeaderElectionRateAndTimeMs"})
            - record: kafka_active_controller_count
              expr: sum(kafka_controller_KafkaController_Value{name="ActiveControllerCount"})
            - record: kafka_unclean_leader_election_rate
              expr: sum(kafka_controller_ControllerStats_FiveMinuteRate{name="UncleanLeaderElectionsPerSec"})
            - record: kafka_max_lag_between_leader_and_follower
              expr: kafka_server_ReplicaFetcherManager_Value{app="eric-data-message-bus-kf",name="MaxLag"}
    prometheus.yml: |
      global:
        scrape_interval: 15s
        scrape_timeout: 10s
        evaluation_interval: 1m
      rule_files:
        - wcdbcd-rules.yml
        - kafkaMetrics-rules.yml
      scrape_configs:
        - job_name: prometheus
          static_configs:
            - targets:
              - localhost:9090
              - localhost:9087

        - job_name: 'kubernetes-nodes'

          # Default to scraping over https. If required, just disable this or change to
          # `http`.
          scheme: https

          # This TLS & bearer token file config is used to connect to the actual scrape
          # endpoints for cluster components. This is separate to discovery auth
          # configuration because discovery & scraping are two separate concerns in
          # Prometheus. The discovery auth config is automatic if Prometheus runs inside
          # the cluster. Otherwise, more config options have to be provided within the
          # <kubernetes_sd_config>.
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            # If your node certificates are self-signed or use a different CA to the
            # master CA, then disable certificate verification below. Note that
            # certificate verification is an integral part of a secure infrastructure
            # so this should only be disabled in a controlled environment. You can
            # disable certificate verification by uncommenting the line below.
            #
            #insecure_skip_verify: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

          kubernetes_sd_configs:
            - role: node

          relabel_configs:
            - action: labelmap
              regex: __meta_kubernetes_node_label_(.+)
            - target_label: __address__
              replacement: kubernetes.default.svc:443
            - source_labels: [__meta_kubernetes_node_name]
              regex: (.+)
              target_label: __metrics_path__
              replacement: /api/v1/nodes/${1}/proxy/metrics


        - job_name: 'kubernetes-nodes-cadvisor'

          # Default to scraping over https. If required, just disable this or change to
          # `http`.
          scheme: https

          # This TLS & bearer token file config is used to connect to the actual scrape
          # endpoints for cluster components. This is separate to discovery auth
          # configuration because discovery & scraping are two separate concerns in
          # Prometheus. The discovery auth config is automatic if Prometheus runs inside
          # the cluster. Otherwise, more config options have to be provided within the
          # <kubernetes_sd_config>.
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            # If your node certificates are self-signed or use a different CA to the
            # master CA, then disable certificate verification below. Note that
            # certificate verification is an integral part of a secure infrastructure
            # so this should only be disabled in a controlled environment. You can
            # disable certificate verification by uncommenting the line below.
            #
            #insecure_skip_verify: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

          kubernetes_sd_configs:
            - role: node

          # This configuration will work only on kubelet 1.7.3+
          # As the scrape endpoints for cAdvisor have changed
          # if you are using older version you need to change the replacement to
          # replacement: /api/v1/nodes/${1}:4194/proxy/metrics
          relabel_configs:
            - action: labelmap
              regex: __meta_kubernetes_node_label_(.+)
            - target_label: __address__
              replacement: kubernetes.default.svc:443
            - source_labels: [__meta_kubernetes_node_name]
              regex: (.+)
              target_label: __metrics_path__
              replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

        # Scrape config for service endpoints.
        #
        # The relabeling allows the actual service scrape endpoint to be configured
        # via the following annotations:
        #
        # * `prometheus.io/scrape`: Only scrape services that have a value of `true`
        # * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need
        # to set this to `https` & most likely set the `tls_config` of the scrape config.
        # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.
        # * `prometheus.io/port`: If the metrics are exposed on a different port to the
        # service then set this appropriately.
        - job_name: 'kubernetes-service-endpoints'

          kubernetes_sd_configs:
            - role: endpoints

          tls_config:
            ca_file: /run/secrets/cacert/ca.crt

          relabel_configs:
            - source_labels: [__meta_kubernetes_service_name]
              action: replace
              target_label: job
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
              action: replace
              target_label: __scheme__
              regex: (https?)
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_service_annotation_prometheus_io_port]
              action: replace
              target_label: __address__
              regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
              replacement: $1:$2
            - action: labelmap
              regex: __meta_kubernetes_service_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: kubernetes_namespace
            - source_labels: [__meta_kubernetes_service_name]
              action: replace
              target_label: kubernetes_name
            - source_labels: [__meta_kubernetes_pod_name]
              action: replace
              target_label: kubernetes_pod_name
            - source_labels: [__meta_kubernetes_pod_node_name]
              action: replace
              target_label: kubernetes_pod_node_name

        # Example scrape config for probing services via the Blackbox Exporter.
        #
        # The relabeling allows the actual service scrape endpoint to be configured
        # via the following annotations:
        #
        # * `prometheus.io/probe`: Only probe services that have a value of `true`
        - job_name: 'kubernetes-services'

          metrics_path: /probe
          params:
            module: [http_2xx]

          kubernetes_sd_configs:
            - role: service

          relabel_configs:
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]
              action: keep
              regex: true
            - source_labels: [__address__]
              target_label: __param_target
            - target_label: __address__
              replacement: blackbox
            - source_labels: [__param_target]
              target_label: instance
            - action: labelmap
              regex: __meta_kubernetes_service_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              target_label: kubernetes_namespace
            - source_labels: [__meta_kubernetes_service_name]
              target_label: kubernetes_name

        # Example scrape config for pods
        #
        # The relabeling allows the actual pod scrape endpoint to be configured via the
        # following annotations:
        #
        # * `prometheus.io/scrape`: Only scrape pods that have a value of `true`
        # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.
        # * `prometheus.io/port`: Scrape the pod on the indicated port instead of the default of `9102`.
        - job_name: 'kubernetes-pods'

          kubernetes_sd_configs:
            - role: pod

          relabel_configs:
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
              action: replace
              target_label: __scheme__
              regex: (https?)
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
              action: replace
              regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
              replacement: $1:$2
              target_label: __address__
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: kubernetes_namespace
            - source_labels: [__meta_kubernetes_pod_name]
              action: replace
              target_label: kubernetes_pod_name
    wcdbcd-rules.yml: |
      groups:
        - name: wcdbcd
          rules:
            - record: Cassandra_table_compaction_size
              expr: max(cassandra_table_estimated_pending_compactions)
            - record: Cassandra_table_partition_size
              expr: max(cassandra_table_partition_size_maximum_bytes)
            - record: Cassandra_client_request_failure_count
              expr: sum(cassandra_client_request_failures_total)
            - record: Cassandra_request_unavailable
              expr: sum(cassandra_client_request_failures_total)
            - record: wcdbcd_storage_ratio
              expr: (cassandra_storage_filesystem_bytes_total - cassandra_storage_filesystem_usable_bytes) / cassandra_storage_filesystem_bytes_total
            - record: wcdbcd_storage_low_sliding_window_ratio
              expr: (cassandra_storage_filesystem_bytes_total - max_over_time(cassandra_storage_filesystem_usable_bytes[30m])) / cassandra_storage_filesystem_bytes_total
            - record: Cassandra_unresponsive_nodes
              expr: max(count(cassandra_endpoint_active) by (endpoint)) - min(sum(cassandra_endpoint_active) by (cassandra_node))
            - record: Cassandra_write_latency
              expr: max(cassandra_client_request_latency_seconds{quantile="0.99", operation="write"})
            - record: Cassandra_read_latency
              expr: max(cassandra_client_request_latency_seconds{quantile="0.99", operation="read"})
            - record: Cassandra_clinet_request_timeout
              expr: sum(cassandra_client_request_timeouts_total)
            - record: Cassandra_table_live_sstable_count
              expr: max(cassandra_table_live_sstables)
            - record: Cassandra_table_sstable_per_read_count
              expr: max(cassandra_table_sstables_per_read)
  service:
    endpoints:
      reverseproxy:
        tls:
          verifyClientCertificate: optional
eric-pm-server-rbac-proxy:
  config:
    certAuth:
      clientCaSecret: null
      enabled: false
    oidcAuth:
      caSecret: eric-sec-sip-tls-trusted-root-cert
      clientId: AuthorizationClient
      enabled: true
      groupsClaim: groups
      issuerUrl: https://eric-sec-access-mgmt/auth/realms/master
      usernameClaim: email
    upstream:
      caSecret: null
      url: http://eric-pm-server:9090
    verbose: false
  enabled: false
  ingress:
    enabled: true
    fqdn: null
  nameOverride: eric-pm-server-rbac-proxy
eric-sec-access-mgmt:
  authenticationProxy:
    cookieDomain: ""
    enabled: false
    ingress:
      enabled: false
    lastlogintimeEnabled: true
  enabled: true
  global:
    security:
      tls:
        enabled: true
  http:
    hostValidation:
      allowedHosts: null
  imageCredentials:
    pullPolicy: IfNotPresent
  ingress:
    enabled: false
    hostname: eric-sec-access-mgmt
    inghostname: null
  logLevel: info
  metrics:
    enabled: false
  persistence:
    dbHost: eric-idam-database-pg
    dbName: idam
    dbPasswdkey: amPKey
    dbUserkey: amUKey
    dbsecret: eric-data-document-database-pg-credentials
    tls:
      enabled: false
  resources:
    iam:
      limits:
        cpu: 3000m
        memory: 2036Mi
      requests:
        cpu: 300m
        memory: 768Mi
  service:
    tls:
      enabled: true
  sipoauth2:
    enabled: false
  statefulset:
    adminSecret: eric-sec-access-mgmt-creds
    passwdkey: kcpasswd
    userkey: kcadminid
  tls:
    client:
      pg:
        issuer: eric-idam-database-pg-client-ca
        mountPath: /run/secrets/pg-client-certificate
        subject: pguser
  updateStrategy:
    iam:
      type: RollingUpdate
eric-sec-key-management:
  enabled: true
  imageCredentials:
    pullPolicy: IfNotPresent
  persistence:
    etcd:
      tls:
        enabled: true
    type: etcd
  replicas: 2
  resources:
    vault:
      limits:
        cpu: 300m
        memory: 1200Mi
      requests:
        cpu: 100m
        memory: 400Mi
  service:
    tls:
      enabled: true
  shelter:
    enabled: true
  updateStrategy:
    type: RollingUpdate
eric-sec-sip-tls:
  enabled: true
  etcd:
    hostname: eric-data-distributed-coordinator-ed
  imageCredentials:
    pullPolicy: IfNotPresent
  kafka:
    hostname: eric-data-message-bus-kf
  keyManagement:
    hostname: eric-sec-key-management
    port: 8210
  logLevel: info
  replicaCount: 2
  resources:
    logshipper:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 80m
        memory: 80Mi
    sip-tls:
      limits:
        cpu: 1000m
        memory: 400Mi
      requests:
        cpu: 100m
        memory: 200Mi
    sip-tls-init:
      limits:
        cpu: 300m
        memory: 200Mi
      requests:
        cpu: 100m
        memory: 100Mi
    sip-tls-supervisor:
      limits:
        cpu: 300m
        memory: 400Mi
      requests:
        cpu: 100m
        memory: 200Mi
  updateStrategy:
    type: RollingUpdate
eric-sec-sip-tls-crd:
  enabled: false
eric-tm-ingress-controller-cr-crd:
  enabled: false
fullnameOverride: ""
global:
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      nginx.ingress.kubernetes.io/use-regex: "true"
    controllerType: nginx
iamAuth:
  multitenancy: false
  superUserOrganizationId: eeeeeeee-117e-11ec-82a8-0242ac130003
  superUserOrganizationName: Ericsson
  superUserPrivilegeName: EriSuperUserPriv
image: 451278531435.dkr.ecr.us-east-1.amazonaws.com/proj-adp-eric-data-distributed-coordinator-ed-drop/eric-data-distributed-coordinator-ed:3.3.0-13
imagePullSecrets: []
ingress:
  annotations: {}
  enabled: false
  hosts:
  - host: chart-example.local
    paths: []
  tls: []
nameOverride: ""
nodeSelector: {}
replicaCount: 1
resources: {}
service:
  port: 80
  type: ClusterIP
tolerations: []
